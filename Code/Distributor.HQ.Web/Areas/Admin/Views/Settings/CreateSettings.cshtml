@model Distributr.HQ.Lib.ViewModels.Admin.SettingsViewModel.SettingsViewModel
@{
    ViewBag.Title = "Create New Setting";
}
@if (ViewBag.msg != null)
    {
        <div class="notice-notification">
            @ViewBag.msg
        </div>
    }
	<h2 id="breadcrumb-holder">Global Settings &nbsp; &gt;&nbsp;Settings &nbsp;&gt; <span class="bc-example"></span> &gt; Add Setting</h2>

<div id="main-content-housing">

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

<br />
@if (ViewBag.msg != null)
{ 
        <div class="notice-notification">
@ViewBag.msg
</div>
}
@using (Html.BeginForm())
{
    if (!Html.ViewData.ModelState.IsValid)
    {
            <div class="notice-notification">
                @Html.ValidationSummary()
            </div>
    }
    
   <div id="primary-controls">
    <fieldset>
    <legend>Settings</legend>  			
        <table class="detail-arrange">

        <tr><td style="padding-top:12px;"><strong>Key
      </strong></td><td>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.SettingKey, new SelectList(ViewBag.KeyList, "Key", "Value"))        
            @Html.ValidationMessageFor(model => model.SettingKey)
        </div></td></tr>

         <tr><td style="padding-top:12px;"><strong>Value
        </strong></td><td>
        <div class="editor-field">
            @Html.EditorFor(model => model.Value)
            @Html.ValidationMessageFor(model => model.Value)
        </div></td></tr>
        </table>
        </fieldset>
       

       <fieldset class="actions">
            <legend>Actions</legend>
            <input name="Create" type="submit" value="Save" class="button-style-one"/>
            <input name="Create" type="reset" value="Clear" class="button-style-one"/>
            

        </fieldset>
 </div>
}
</div>




