@model Distributr.HQ.Lib.ViewModels.Admin.Product.AddPricingLineItemsViewModel

@{
    ViewBag.Title = "CreatePricingItems";
}
	<h2 id="breadcrumb-holder">Products &amp; Pricing &gt; <span class="bc-example">@Html.ActionLink("View Pricing ", "/List")  &nbsp;&gt; @Html.ActionLink("Edit Pricing Items", "/EditProductPricing", new { id = @Model.id })</span> &gt; Add Pricing Items</h2>

<div id="main-content-housing">

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery-ui.js")" type="text/javascript"></script>
    <script type="text/javascript">

        $(function () {
            $("#datepicker").datepicker({
                changeMonth: true,
                changeYear: true
            });
        });
    </script>
    <script type="text/javascript">
    $(function () {
        debugger;
        var $number =@(ViewBag.DecimalPlaces);
        var $pattern = '^[0-9]*\\.[0-9]{' + $number + '}$';
        var $regexpattern = '^\d+(\.\d{1,'+$number+'})?$';
        var $title = "The Value should be up to " + $number + " decimal places";
        $("#CurrentSellingPrice").attr("pattern", $pattern);
        $("#CurrentSellingPrice").attr("title", $title);
        $("#CurrentSellingPrice").attr("data-val-regex-pattern", $regexpattern);
        debugger;
       
        //$('#CurrentSellingPrice').onload(function () {
        //    this.value = this.value.toFixed(5);
        //});

        //$('#CurrentSellingPrice').change(function () {
        //    alert("Kenya");
        //    this.value = parseFloat(this.value).toFixed(5);
        //});
    });
    </script>



@using (Html.BeginForm()) {
         
    @Html.ValidationSummary(true)    
   
    @Html.HiddenFor(model => model.id)   
   <div id="primary-controls">

    <fieldset>
    <legend>Pricing Item</legend>
           <table class="detail-arrange">
    <tr><td>
        <div class="editor-label">
            @Html.Label("Ex-Factory Price")
        </div></td><td>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.CurrentExFactory, new {@readonly="readonly"})
            @Html.ValidationMessageFor(model => model.CurrentExFactory)
        </div></td>
</tr><tr><td>
        <div class="editor-label">
            @Html.Label("Selling Price")
        </div></td><td>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.CurrentSellingPrice)&nbsp; <span><strong>( to @ViewBag.DecimalPlaces Decimal Places )</strong></span>
            @Html.ValidationMessageFor(model => model.CurrentSellingPrice)
        </div></td>
</tr><tr><td>
        <div class="editor-label">
            @Html.Label("Effective Date")
        </div></td><td>
        <div class="editor-field">
            @Html.TextBox("CurrentEffectiveDate", DateTime.Now.ToString("dd-MMM-yyyy"), new { @id = "datepicker" })
            @Html.ValidationMessageFor(model => model.CurrentEffectiveDate)
        </div></td>
</tr>
</table>
</fieldset>
 <fieldset class="actions">
            <legend>Actions</legend>
            <input name="Create" type="submit" value="Save" class="button-style-one"/>
            <input name="Create" type="reset" value="Clear" class="button-style-one"/>
            

        </fieldset>
 </div><!-- end of div#primary-controls -->

}


</div>
