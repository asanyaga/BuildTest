@model Distributr.HQ.Lib.ViewModels.Admin.Product.EditConsolidatedProductOut
@using Distributr.HQ.Lib.Helper           
@{
    ViewBag.Title = Html.GetText("hq.product.consolidated.title.add");
}   
<h2 id="breadcrumb-holder">Products &amp; Pricing &gt; <span class="bc-example">@Html.ActionLink("View Products", "/Index")</span> &gt;
 @Html.GetText("hq.product.consolidated.breadcrumb.add")</h2>

<div id="main-content-housing">

@*<h2 class="page-intro-header">
    @Model.Title</h2>*@
 

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@if (ViewBag.msg != null)
{
    <div class="notice-notification">
    @ViewBag.msg
    </div>
}
@using (Html.BeginForm("CreateConsolidatedProduct", "Product", new { thisId = Model.Id }))
{
    if (!Html.ViewData.ModelState.IsValid)
    {
    <div class="notice-notification">
    @Html.ValidationSummary()
  </div>
    }
                 <div id="primary-controls">               

    <fieldset>
    <legend>@Html.GetText("hq.product.consolidated.details.add")</legend>
        @Html.HiddenFor(model => model.Id)
         <table class="detail-arrange">
        <tr><td>
        <div class="editor-label">
            @Html.GetText("hq.product.form.description")
        </div></td><td>
        <div class="editor-field">
            @Html.EditorFor(model => model.Description)
            @Html.ValidationMessageFor(model => model.Description)
        </div></td></tr>
        @*@Html.HiddenFor(model => model.ProductCode)*@
        <tr><td>
        <div class="editor-label">
            @Html.GetText("hq.product.form.code")
        </div></td><td>
        <div class="editor-field">
            @Html.EditorFor(model => model.ProductCode)
            @Html.ValidationMessageFor(model => model.ProductCode)
        </div></td></tr>
@*        <tr><td>
        <div class="editor-label">
            Brand
        </div></td><td>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.BrandId,
         Model.ProductBrands
              )
        </div></td></tr>*@
                <tr><td>
        <div class="editor-label">
            @Html.GetText("hq.product.form.brand")
        </div></td><td>
         <div class="editor-field">
              @Html.DropDownListFor(model => model.BrandId, new SelectList(ViewBag.BrandsList, "Key", "Value"), "-----Select Brand-----")
               @Html.ValidationMessageFor(model => model.BrandId)
        </div></td>
</tr>
        <tr><td>
        <div class="editor-label">
            @Html.GetText("hq.product.form.packaging")
        </div></td><td>
         <div class="editor-field">
              @Html.DropDownListFor(model => model.PackagingId, new SelectList(ViewBag.PackagingsList, "Key", "Value"), "-----Select Packaging-----")
  
               @Html.ValidationMessageFor(model => model.PackagingId)
        </div></td>
</tr>
<tr><td>
        <div class="editor-label">
            @Html.GetText("hq.product.form.packagingtype")
        </div></td><td>
         <div class="editor-field">
              @Html.DropDownListFor(model => model.PackagingTypeId, new SelectList(ViewBag.PackTypeList, "Key", "Value"), "-----Select Packaging Type-----") 
               @Html.ValidationMessageFor(model => model.PackagingTypeId)
        </div></td>
        </tr>
        <tr><td style="padding-top:12px;"><strong>@Html.GetText("hq.product.form.exfactoryprice")</strong></td><td>
        <div class="editor-field">
            @Html.EditorFor(model => model.ExFactoryPrice)
            @Html.ValidationMessageFor(model => model.ExFactoryPrice)
        </div></td></tr>
@*        <tr><td>
        <div class="editor-label">
            Packaging Name
        </div></td><td>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.PackagingTypeId,
         Model.ProductPackagingTypes
              )
        </div></td></tr>
        <tr><td>
        <div class="editor-label">
            Packaging
        </div></td><td>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.PackagingId,
         Model.ProductPackagings
              )
        </div></td></tr>*@
        </table>
    </fieldset>
         <fieldset class="actions">
            <legend>Actions</legend>
            <input name="Create" type="submit" value="Save" class="button-style-one"/>
           
            

        </fieldset>
    </div>
}
<br />

<br />
@if (Model.Id != Guid.Empty)
{
@*<div class="add-items">
    @Html.ActionLink("View Products", "/List")
</div>*@
<div class="main-content-paragraph">Add Product
</div>
    
<fieldset>
<table id="tablesorter-demo" class="tablesorter">
<thead>
    <tr>
        <th>
            @Html.GetText("product.form.code")
        </th>
        <th>
            @Html.GetText("product.form.description")
        </th>
        <th>
            @Html.GetText("product.form.brand")
        </th>
        <th>
            @Html.GetText("product.form.packagingtype")
        </th>
        <th>
            @Html.GetText("product.form.packaging")
        </th>
        <th>
            @Html.GetText("product.form.quantity")
        </th>
    </tr></thead><tbody>
    @if (Model.ProductDetails != null)
    {
        foreach (var item in Model.ProductDetails)
        { 
        <tr>
            <td>
                @item.ProductCode
            </td>
            <td>
                @item.Descritpion
            </td>
            <td>
                @item.Brand
            </td>
            <td>
                @item.PackagingType
            </td>
            <td>
                @item.Packaging
            </td>
            <td>
                @item.Qty
            </td>
            @*<td align="right">
                @using (Html.BeginForm("RemoveItem", "Product", new { parentId = Model.Id, itemId = item.ProductId }))
                { 
                    <input type="submit" value="Remove" />
                }
            </td>*@
        </tr>
        }
    }
    </tbody>
</table>
@using (Html.BeginForm("AddItem", "Product", new { parentId = Model.Id }))
{
    @Html.HiddenFor(model => Model.Id)
      <div id="primary-controls">
    <fieldset>
    <legend>LineItems</legend>
                            
								
							
					
        <table class="detail-arrange">
        <tr>
        <td style="padding-top:12px;"><strong>
        @Html.GetText("product.form.product")
    </strong></td>
    <td>
    <div class="editor-field">
        @Html.DropDownListFor(model => model.ProductID,
         Model.ProductList, "--Select Product To Add--"
              )
    </div></td></tr>
    <tr><td style="padding-top:12px;"><strong>
        @Html.GetText("product.form.quantity")
   </strong></td><td><span class="text-box-cshtml">@Html.EditorFor(model => model.Quantity)</span>
        @Html.ValidationMessageFor(model => model.Quantity)
    </td></tr>
    </table>
    </fieldset>

     <fieldset class="actions">
            <legend>Actions</legend>
            <input name="Create" type="submit" value="Save" class="button-style-one"/>
            <input name="Create" type="reset" value="Clear" class="button-style-one"/>
            

        </fieldset>
    </div>
}
</fieldset>
}
</div>