@using Distributr.HQ.Lib.Helper
@using Distributr.HQ.Lib.Paging
@using Distributr.HQ.Lib.ViewModels
@using MvcContrib.UI.Pager
@model IPagedList<Distributr.Core.Domain.Transactional.DocumentEntities.OrderDocumentEntities.OutletMainOrderSummary>
@{
    ViewBag.Title = Html.GetText("hq.orders.listing.title");
    string searchText = ViewBag.srchText;
    var startDate = ViewBag.startDate;
    var endDate = ViewBag.endDate;
    int itemsperpage = ViewBag.itemsPerPage;
}
<h2 id="breadcrumb-holder">@Html.GetText("hq.orders.breadcrumb") &gt; @Html.GetText("hq.orders.listing.breadcrumb")</h2>
<div id="main-content-housing">
    <h2 class="page-header">@Html.GetText("hq.orders.listing.heading")</h2>
    <!-- end of div#primary-controls -->
    <script src="@Url.Content("~/Scripts/jquery-ui.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
    <script type="text/javascript">
        $(function () {
            $("#datepicker").datepicker({
                dateFormat: "dd-M-yy",
                changeMonth: true,
                buttonImage: "/Content/images/cal.gif",
                showOn: "button",
                inline: true,
                showStatus: true,
                highlightWeek: true,
                showAnim: 'scale',
                changeYear: true
            });
        });


        //Second Date picker
        $(function () {
            $("#datepicker2").datepicker({
                dateFormat: "dd-M-yy",
                changeMonth: true,
                buttonImage: "/Content/images/cal.gif",
                showOn: "button",
                inline: true,
                showStatus: true,
                highlightWeek: true,
                showAnim: 'scale',
                changeYear: true
            });
        });



    </script>
    
    @using (Html.BeginForm("OutstandingOrders", "OutletOrder"))
    {
        @Html.ValidationSummary(true)
    
    
        <fieldset>
            <legend>@Html.GetText("hq.orders.listing.filter")</legend>
	<table>
		<tr>
			<td style="padding-top: 12px;">
				<strong>Start Date: </strong>
			</td>
			<td>
				<span class="text-box-cshtml">@Html.TextBox("StartDate",DateTime.Now.AddDays(1 - DateTime.Today.Day).ToString("dd-MMM-yyyy"), new { @id = "datepicker", @style = "Margin-top: 10px" })</span>
			</td>
			<td style="padding-top: 12px;">
				<strong>End Date: </strong>
			</td>
			<td>
				<span class="text-box-cshtml">@Html.TextBox("EndDate", DateTime.Now.ToString("dd-MMM-yyyy"), new { @id = "datepicker2", @style = "Margin-top: 10px" })</span>
			</td>
			<td>
				<span class="text-box-cshtml">@Html.TextBox("orderRef", searchText, new {@style = "Margin-top: 10px"})</span></td>
			<td>
		        <input name="srch" type="button" value="Search" class="button-style-one" id="search" style="margin-top: 5px" /></td>
		        <td>
		        <input name="srch" type="button" value="Clear" class="button-style-one" id="clear" style="margin-top: 5px"/>
			</td>
				<script type="text/javascript">
				    $('#search').click(function () {
				        window.location = window.location.href.substring(0, window.location.href.indexOf('?')) + "?startDate=" + $('#datepicker').val() + "&endDate=" + $('#datepicker2').val() + "&srchParam=" + $('#orderRef').val();
				    });

				    $('#clear').click(function () {
				        window.location = window.location.href.substring(0, window.location.href.indexOf('?'));

				    });
		        </script>
		</tr>
	</table>
        </fieldset>
    }
    
    @try
    {
   
        <div class="table-container">
            @if (Model.Count >= 0)
            {
                <table width="800px" id="tablesorter-demo" class="tablesorter">
                    <thead>
                        <tr>
                            <th align="center">
                                @Html.GetText("hq.orders.documentreference")
                            </th>
                            <th align="center">
                                @Html.GetText("hq.orders.required")
                            </th>
                            <th align="center">
                                @Html.GetText("hq.orders.netamount")
                            </th>
                            <th align="center">
                                @Html.GetText("hq.orders.vatamount")
                            </th>
                            <th align="center">
                                @Html.GetText("hq.orders.grossamount")
                            </th>
                            <th align="center">
                                @Html.GetText("hq.orders.paidamount")
                            </th>
                            <th align="center">
                                @Html.GetText("hq.orders.salesdiscount")
                            </th>
                            <th align="center">
                                @Html.GetText("hq.orders.outstandingamount")
                            </th>
                            <th align="center">
                                @Html.GetText("hq.orders.salesman")
                            </th>
                            <th align="center">
                                @Html.GetText("hq.orders.distributor")
                            </th>
                            @*<th>
                                Process
                            </th>*@
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td align="left">
                                    @Html.ActionLink(@item.DocumentReference, "OrderDetails", new {orderId = item.Id}) 
                                </td>
                                <td align="left">
                                    @item.Required
                                </td>
                                <td style="text-align: right">
                                    @string.Format("{0:F}", item.NetAmount)
                                </td>
                                <td style="text-align: right">
                                    @string.Format("{0:F}", item.TotalVat)
                                </td>
                                <td style="text-align: right">@string.Format("{0:F}", item.GrossAmount)
                                </td>
                                <td style="text-align: right">
                                    @string.Format("{0:F}",@item.PaidAmount)
                                </td>
                                <td align="left">
                                    @string.Format("{0:F}",item.SaleDiscount)
                                </td>
                                <td style="text-align: right">
                                    @string.Format("{0:F}",@item.OutstandingAmount)
                                </td>
                                <td align="left">
                                    @item.Salesman
                                </td>
                                <td align="left">
                                    @item.Distributor
                                </td>
                            </tr>
                        }</tbody>
                </table>
            }
            else
            {
                @ViewBag.NoOrders;
            }
        </div>

        <div class="pager">
		    @Html.Pager(Model.PageSize, Model.PageNumber, Model.TotalItemCount, new { srchParam = searchText, startDate = startDate, endDate = endDate, itemsperpage = itemsperpage})
            Items per page:
            @Html.DropDownListFor(n =>Model.PageSize, ViewModelBase.ItemsPerPageList, new { @id = "ddlItemsPerPage"})
        </div>
    }
    catch (Exception exx)
    {
        ViewBag.msg = exx.Message;
    }
</div>
