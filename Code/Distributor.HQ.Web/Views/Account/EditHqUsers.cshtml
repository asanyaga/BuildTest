@using Distributr.HQ.Lib.Helper
@model Distributr.HQ.Lib.ViewModels.Admin.User.UserViewModel
@{
    ViewBag.Title = Html.GetText("hq.user.form.title.edit");
}
	<h2 id="breadcrumb-holder">
    @Html.GetText("hq.user.breadcrumb") &nbsp; &gt;&nbsp;
    @Html.GetText("hq.user.listing.breadcrumb") &nbsp;&gt; <span class="bc-example">  
    @Html.ActionLink(Html.GetText("hq.user.form.breadcrumb.view"), "ListAllUsers", "Account")</span> &gt; 
    @Html.GetText("hq.user.form.breadcrumb.edit")</h2>

<div id="main-content-housing">


<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
@if (!Html.ViewData.ModelState.IsValid)
{ 
 @Html.ValidationSummary(false,"Correct following errors")
}
@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
    <div id="primary-controls">
    <fieldset>
    <legend>@Html.GetText("hq.user.form.details.edit")</legend>
   				
        <table class="detail-arrange">
           <tr><td style="padding-top:12px;"><strong>@Html.GetText("hq.user.form.producer")</strong></td><td>
            <div class="editor-field">
           @* CostCentre*@
            @Html.DropDownList("CostCentre", new SelectList(ViewBag.ProducerList, "Key", "Value"), "----Select Producer-----")
            </div></td></tr>
            <tr><td style="padding-top:12px;"><strong>
            @Html.GetText("hq.user.form.username")</strong></td><td>
        <div class="editor-field">
            @Html.EditorFor(model => model.Username)
            @Html.ValidationMessageFor(model => model.Username)
        </div></td></tr>
@*
        <div class="editor-label">
            @Html.LabelFor(model => model.Email)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Email)
            @Html.ValidationMessageFor(model => model.Email)
        </div>*@
        <tr><td style="padding-top:12px;"><strong>@Html.GetText("hq.user.form.password")</strong></td><td>
        <div class="editor-field">
            @Html.PasswordFor(model => model.Password)
            @Html.ValidationMessageFor(model => model.Password)
        </div></td></tr>

@*        <div class="editor-label">
            @Html.LabelFor(model => model.ConfirmPassword)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ConfirmPassword)
            @Html.ValidationMessageFor(model => model.ConfirmPassword)
        </div>*@
        <tr>
        <td style="padding-top:12px;">
        <strong>
        PIN
        </strong>
       </td><td>
        <div class="editor-field">
            @Html.EditorFor(model => model.PIN)
            @Html.ValidationMessageFor(model => model.PIN)
        </div></td></tr>
        <tr><td style="padding-top:12px;"><strong>@Html.GetText("hq.user.form.mobile")</strong></td><td>
        <div class="editor-field">
            @Html.EditorFor(model => model.Mobile)
            @Html.ValidationMessageFor(model => model.Mobile)
        </div></td></tr>
        <tr><td style="padding-top:12px;"><strong>@Html.GetText("hq.user.form.usertype")</strong></td><td>
            <div class="editor-field">
            @Html.DropDownListFor(model => model.UserType, Model.UserList, "-----Select User Type-----")
            </div></td></tr>
        
        </table>
    </fieldset>

         <fieldset class="actions">
            <legend>Actions</legend>
            <input name="Create" type="submit" value="Save" class="button-style-one"/>
           
            

        </fieldset>
    </div>
}
</div>


