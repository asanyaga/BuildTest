@model Distributr.HQ.Lib.ViewModels.Admin.Product.EditSaleProductViewModelOut

@{
    ViewBag.Title = "EditSaleProduct";// Model.Title;
}
<h2 id="breadcrumb-holder">Products &amp; Pricing &gt; <span class="bc-example">@Html.ActionLink("View Products", "/List")</span> &gt; Edit Sale Product</h2>

<div id="main-content-housing">


<script src="@Url.Content("~/Scripts/jquery-ui.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script type="text/javascript">
    $(function () {
        $("#BrandId").change(function (e) {
            var brandId = $("#BrandId option:selected").val();
            var urlB = '@Url.Action("SubBrands")';

            cascadingdropdown();
        });
    });
    function cascadingdropdown() {
        var brandId = $("#BrandId option:selected").val();
        // window.alert(" call cascading dropdown for iddepartment = " + countryId);
        var urlemp = '@Url.Action("SubBrands")';
        var selects = $('#FlavourID');
        $.ajax({
            type: "POST",
            url: urlemp,
            data: { brandId: brandId },
            success: function (returndata) {
                if (returndata.ok) {


                    selects.append($('<option></option>').val('0').html('-----Select Sub Brand-----'));
                    selects.empty();
                    $.each(returndata.data, function (index, itemData) {

                        //                        
                        selects.append($('<option></option>').val(itemData.Id).html(itemData.Name));


                    });
                    selects.show('slow');
                }
                else {
                    window.alert(' error : ' + returndata.message);
                }

            }
        }
        );

    }
</script>

@if (ViewBag.msg != null)
{ 
    <div class="notice-notification">
@ViewBag.msg
@Html.ValidationSummary(true)
</div>
}

@using (Html.BeginForm())
{
    
         @Html.HiddenFor(model => model.Id)
 <div id="primary-controls">
    <fieldset>
    <legend>Edit Sale Product</legend>
                            
								
							
					
        <table class="detail-arrange">
         <tr><td>
        <div class="editor-label">
            @Html.LabelFor(model => model.ProductCode)
        </div></td><td>
        <div class="editor-field">
            @Html.EditorFor(model => model.ProductCode)
            @Html.ValidationMessageFor(model => model.ProductCode)
        </div></td>
        </tr>
        
        @*@Html.HiddenFor(model => model.ProductCode)*@
        
        <tr><td>
        <div class="editor-label">
            Brand
        </div></td><td>
         <div class="editor-field">
              @Html.DropDownListFor(model => model.BrandId, Model.ProductBrands, "-----Select Brand-----")
        </div></td>
</tr><tr><td>
        <div class="editor-label">
            Packaging Type
        </div></td><td>
         <div class="editor-field">
              @Html.DropDownListFor(model => model.PackagingTypeId,Model.ProductPackagingTypes, "-----Select Package Type-----")
        </div></td>
        </tr>
        <tr><td>
        <div class="editor-label">
            Packaging
        </div></td><td>
         <div class="editor-field">
              @Html.DropDownListFor(model => model.PackagingId,Model.ProductPackagings, "-----Select Packaging-----")
        </div></td>
</tr><tr><td>
        <div class="editor-label">
            Sub Brand
        </div></td><td>
         <div class="editor-field">
@*              @Html.DropDownListFor(model => model.FlavourID,
    Model.Flavours, "-----Select Sub Brand-----" 
              )*@
            @if (Model.BrandId == null)
            {
            <select id="FlavourID" style="display:block" name="FlavourID" > <option value="0">---Select Brand First---</option></select>
            }
            else
            {
            @Html.DropDownListFor(model => model.FlavourID, Model.Flavours, "-----Select Brand First-----")
            }
               @Html.ValidationMessageFor(model => model.FlavourID)
        </div></td>
</tr><tr><td>
        <div class="editor-label">
            Product Type
        </div></td><td>
         <div class="editor-field">
              @Html.DropDownListFor(model => model.ProductTypeID,
         Model.ProductTypes, "-----Select Product Category-----"
              )
        </div></td></tr>
        <tr><td>
        <div class="editor-label">
           Returnable Product 
        </div></td><td>
         <div class="editor-field">

              @Html.DropDownListFor(model => model.ReturnableProductId, Model.ReturnableProduct, "-----Select Returnable Product-----")
              @Html.ValidationMessageFor(model => model.ReturnableProductId)
        </div></td></tr>

         <tr><td>
        <div class="editor-label">
            @Html.LabelFor(model => model.Description)
        </div></td><td>
        <div class="editor-field">
            @Html.EditorFor(model => model.Description)
            @Html.ValidationMessageFor(model => model.Description)
        </div></td></tr>
        <tr><td>VAT Class</td>
        <td>@Html.DropDownListFor(model => model.VatClassId, Model.VatClass, "----Select VAT Class-----")</td>
        </tr>
        <tr><td style="padding-top:12px;"><strong>ExFactory Price</strong></td><td>
        <div class="editor-field">
            @Html.EditorFor(model => model.ExFactoryPrice)
            @Html.ValidationMessageFor(model => model.ExFactoryPrice)
        </div></td></tr>
        </table>
        </fieldset>
        <fieldset class="actions">
            <legend>Actions</legend>
            <input name="Create" type="submit" value="Save" class="button-style-one"/>
           <input name="Clear" type="reset" value="Clear" class="button-style-one"/>
            

        </fieldset>
    </div>
}

</div>