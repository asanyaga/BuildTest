@model Distributr.HQ.Lib.ViewModels.Admin.Product.SaleProductViewModel
@using Distributr.HQ.Lib.Helper
@{
    ViewBag.Title = Html.GetText("hq.product.sale.title.add");
}
<h2 id="breadcrumb-holder">Products &amp; Pricing &gt; <span class="bc-example">@Html.ActionLink("View Products", "Index")</span> &gt; 
@Html.GetText("hq.product.sale.breadcrumb.add")</h2>

<div id="main-content-housing">


<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery-ui.js")" type="text/javascript"></script>

<script type="text/javascript">
    $(function () {
        $("#Brands").change(function (e) {
            var brandId = $("#Brands option:selected").val();
            var urlB = '@Url.Action("SubBrands")';

            cascadingdropdown();

        });
    });


    function cascadingdropdown() {
        var brandId = $("#Brands option:selected").val();
        // window.alert(" call cascading dropdown for iddepartment = " + countryId);
        var urlemp = '@Url.Action("SubBrands")';
        var selects = $('#FlavourID');
        $.ajax({
            type: "POST",
            url: urlemp,
            data: { brandId: brandId },
            success: function (returndata) {
                debugger;
                if (returndata.ok) {

                    
                    selects.append($('<option></option>').val('0').html('-----Select Flavour-----'));
                    selects.empty();
                    $.each(returndata.data, function (index, itemData) {

                        //                        
                        selects.append($('<option></option>').val(itemData.Id).html(itemData.Name));


                    });
                    selects.show('slow');
                }
                else {
                    window.alert(' error : ' + returndata.message);
                }

            }
        });

    }

    

</script>


@if (ViewBag.msg != null)
{ 
    <div class="notice-notification">
@ViewBag.msg
</div>
}
@using (Html.BeginForm())
{
    if (!Html.ViewData.ModelState.IsValid)
    {
            <div class="notice-notification">
                @Html.ValidationSummary()
            </div>
    }  
          <div id="primary-controls">
    <fieldset>
    <legend>@Html.GetText("hq.product.sale.details.add")</legend>
      <table class="detail-arrange">

         <tr><td style="padding-top:12px;"><strong>@Html.GetText("hq.product.form.code")*
      </strong></td>
               <td><span class="text-box-cshtml">@Html.EditorFor(model => model.ProductCode)</span>
            @Html.ValidationMessageFor(model => model.ProductCode)
       </td>
        </tr>
        
        @*@Html.HiddenFor(model => model.ProductCode)*@
        
        <tr><td style="padding-top:12px;"><strong>
            @Html.GetText("hq.product.form.brand")*
      </strong></td>
          <td><span class="text-box-cshtml">
              @Html.DropDownListFor(model => model.Brands, new SelectList(ViewBag.BrandsList, "Key", "Value"), "-----Select Brand-----",new{Id="Brand"})</span>
             
               @Html.ValidationMessageFor(model => model.Brands)
        </td>
</tr>
<tr><td style="padding-top:12px;"><strong>
            @Html.GetText("hq.product.form.subbrand")*
       </strong></td><td>
         <div class="editor-field">            
             @* <select id="FlavourID" style="display:block" name="FlavourID" > <option value="0">---Select Brand First---</option></select>*@
                @Html.DropDownListFor(model => model.FlavourID, new SelectList(ViewBag.FlavoursList, "Key", "Value"), "---Select Brand First---",new{Id="Flavour"})
               @Html.ValidationMessageFor(model => model.FlavourID)
        </div></td>
</tr>
<tr><td style="padding-top:12px;"><strong>
            @Html.GetText("hq.product.form.packagingtype")*
       </strong></td><td>
         <div class="editor-field">
              @Html.DropDownListFor(model => model.PackageType, new SelectList(ViewBag.PackTypeList, "Key", "Value"), "-----Select Packaging Type-----") 
               @Html.ValidationMessageFor(model => model.PackageType)
        </div></td>
        </tr>
        <tr><td style="padding-top:12px;"><strong>
            @Html.GetText("hq.product.form.packaging")*
      </strong></td><td>
         <div class="editor-field">
              @Html.DropDownListFor(model => model.Packaging, new SelectList(ViewBag.PackagingsList, "Key", "Value"), "-----Select Packaging-----")
  
               @Html.ValidationMessageFor(model => model.Packaging)
        </div></td>
</tr><tr><td style="padding-top:12px;"><strong>
            @Html.GetText("hq.product.form.producttype")*
       </strong></td><td>
         <div class="editor-field">
              @Html.DropDownListFor(model => model.ProductTypeID, new SelectList(ViewBag.ProductTypeList, "Key", "Value"), "-----Select Product Category-----")
              @Html.ValidationMessageFor(model => model.ProductTypeID)
        </div></td></tr>

        <tr><td style="padding-top:12px;"><strong>
           @Html.GetText("hq.product.form.returnable") 
       </strong></td><td>
         <div class="editor-field">
             @Html.DropDownListFor(model => model.ReturnableProductId, new SelectList(ViewBag.ReturnableProductList, "Key", "Value"), "-----Select Returnable Product-----") 
             @Html.ValidationMessageFor(model => model.ReturnableProductId)
        </div></td></tr>
       <tr><td style="padding-top:12px;"><strong>
           @Html.GetText("hq.product.form.vat")*
      </strong></td><td>
         <div class="editor-field">
              @Html.DropDownListFor(model => model.VatClassId, new SelectList(ViewBag.VatClassList, "Key", "Value"), "-----Select Vat Class-----"

              ) @Html.ValidationMessageFor(model => model.VatClassId)
        </div></td></tr>
         <tr><td style="padding-top:12px;"><strong>@Html.GetText("hq.product.form.name")*</strong></td><td>
        <div class="editor-field">
            @Html.EditorFor(model => model.Description)
            @Html.ValidationMessageFor(model => model.Description)
        </div></td></tr>
        <tr><td style="padding-top:12px;"><strong>@Html.GetText("hq.product.form.exfactoryprice")</strong></td><td>
        <div class="editor-field">
            @Html.EditorFor(model => model.ExFactoryPrice)
            @Html.ValidationMessageFor(model => model.ExFactoryPrice)
        </div></td></tr>
        </table>
        </fieldset>
  <fieldset class="actions">
            <legend>Actions</legend>
            <input name="Create" type="submit" value="Save" class="button-style-one"/>
            <input name="Cancel" type="reset" value="Cancel" class="button-style-one" id="cancel"/>
            

        </fieldset>
 </div><!-- end of div#primary-controls -->
     
}

</div>
<script type="text/javascript">
    $("#Brand").change(function () {

        var brandId = $(this).val();

        $.getJSON('SubBrands', { brandId: brandId },
            function (data) {
                var select = $("#Flavour");
                select.empty();
                $.each(data, function (index, itemData) {
                    select.append($('<option/>', {
                        value: itemData.Value,
                        text: itemData.Text
                    }));
                });
            });
    });
    
    
        $('#cancel').click(function () {
           
            window.location = "Index";
        });
</script>