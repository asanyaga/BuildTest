@using Distributr.HQ.Lib.Helper
@model Distributr.HQ.Lib.ViewModels.Agrimanagr.CostCentreViewModel.CommodityProducerViewModel
@{
    ViewBag.Title = "EditCommodityProducer";
}

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<h2 id="breadcrumb-holder">GLOBAL SETTINGS &gt;  <span class="bc-example">
    @Html.ActionLink(Html.GetText("hq.commodityProducer.form.breadcrumb.view"), "ListCommodityProducers", new { CommoditySupplierId = Model.CommoditySupplierId })</span> &gt; 
    @Html.GetText("hq.commodityProducer.form.breadcrumb.edit")</h2>
<div id="main-content-housing">
    @using (Html.BeginForm())
    {
        @*@Html.ValidationSummary(true)*@
        <div id="primary-controls">
            <fieldset>
                <legend>Commodity Producer</legend>
                <table class="detail-arrange">
                    <tr>
                        <td style="padding-top: 12px;">@Html.HiddenFor(model => model.Id, new {@id = "farmerId"})</td>
                        <td>@Html.HiddenFor(model => model.CommoditySupplierId)</td>
                    </tr>

                    <tr>
                        <td style="padding-top: 12px;"><strong>@Html.LabelFor(model => model.Code)</strong></td>
                        <td>
                            @Html.EditorFor(model => model.Code)
                            @Html.ValidationMessageFor(model => model.Code)
                        </td>
                    </tr>

                    <tr>
                        <td style="padding-top: 12px;"><strong>@Html.LabelFor(model => model.Acrage)</strong></td>
                        <td>
                            @Html.EditorFor(model => model.Acrage)
                            @Html.ValidationMessageFor(model => model.Acrage)
                        </td>
                    </tr>

                    <tr>
                        <td style="padding-top: 12px;"><strong>@Html.LabelFor(model => model.Name)</strong></td>
                        <td>
                            @Html.EditorFor(model => model.Name)
                            @Html.ValidationMessageFor(model => model.Name)
                        </td>
                    </tr>

                    <tr>
                        <td style="padding-top: 12px;"><strong>@Html.LabelFor(model => model.RegNo)</strong></td>
                        <td>
                            @Html.EditorFor(model => model.RegNo)
                            @Html.ValidationMessageFor(model => model.RegNo)
                        </td>
                    </tr>

                    <tr>
                        <td style="padding-top: 12px;"><strong>@Html.LabelFor(model => model.PhysicalAddress)</strong></td>
                        <td>
                            @Html.EditorFor(model => model.PhysicalAddress)
                            @Html.ValidationMessageFor(model => model.PhysicalAddress)
                        </td>
                    </tr>

                    <tr>
                        <td style="padding-top: 12px;"><strong>@Html.LabelFor(model => model.Description)</strong></td>
                        <td>
                            @Html.EditorFor(model => model.Description)
                            @Html.ValidationMessageFor(model => model.Description)
                        </td>
                    </tr>
                </table>
            </fieldset>
            <fieldset class="actions">
                <legend>Actions</legend>
                <input name="Edit" type="submit" value="Save" class="button-style-one" />
            </fieldset>
        </div>

        <fieldset class="actions">
            <legend>Assign centre</legend>
            <table class="detail-arrange">
                <tr>
                    <td style="padding-top: 12px;"><strong>@Html.LabelFor(model => model.SelectedCentreId)</strong></td>
                    <td>
                       
                        @Html.DropDownListFor(model => model.SelectedCentreId,new SelectList(ViewBag.UnassignedCenters,"Key","Value"),"---Select Center---",new{ data_val="false"  }) @*Model.UnAsignedCentresList, new {@id = "ddlFarmerCentres"})(*@
                        
                    </td>
                    <td>
                        <input name="Create" type="submit" value="Assign Centre" formaction="AssignCentre" class="button-style-one" />
                    </td>
                </tr>
            </table>

            <div class="table-container">
                <table class="tablesorter">
                    <thead>
                        <tr>
                            <th>Centre Name</th>
                            <th>Centre Code</th>
                            <th>Centre Type</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.AssignedFarmCentres)
                        {
                            <tr>
                                <td>@Html.DisplayFor(n => item.Name)</td>
                                <td>@Html.DisplayFor(n => item.Code)</td>
                                <td>@Html.DisplayFor(n => item.CenterType.Name)</td>
                                <td>
                                    @Html.ActionLink("Remove", "UnAssignCentre", new {centreId = item.Id, farmId = Model.Id, commoditySupplierId = Model.CommoditySupplierId})
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </fieldset>
    }

    <div>
       @Html.ActionLink("Back to List", "ListCommodityProducers", new { CommoditySupplierId = Model.CommoditySupplierId }) 
    </div>
</div>
<script type="text/javascript">
    $("#ddlFarmerRegion").change(function() {
        var selectedRegion = $(this).val();
        var farmerId = $("#farmerId").val();
        if(selectedRegion != null && selectedRegion != '') {
            $.getJSON('@Url.Action("GetRegionCentres")', { regionId: selectedRegion, farmerId: farmerId }, function(getcentres) {
                var ddlFarmerCentres = $("#ddlFarmerCentres");
                ddlFarmerCentres.empty();
                $.each(getcentres, function(index, centre) {
                    ddlFarmerCentres.append($('<option/>', {
                        value: centre.Value,
                        text: centre.Text
                    }));
                });
            });
        }
    })
</script>
