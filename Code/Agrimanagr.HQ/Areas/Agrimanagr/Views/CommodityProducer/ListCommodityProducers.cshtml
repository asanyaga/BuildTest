@using Distributr.Core.Domain.Master
@using Distributr.Core.Domain.Master.CostCentreEntities
@using Distributr.HQ.Lib.Helper
@using Distributr.HQ.Lib.Paging
@using Distributr.HQ.Lib.ViewModels
@model Distributr.HQ.Lib.Paging.IPagedList<Distributr.HQ.Lib.ViewModels.Agrimanagr.CostCentreViewModel.CommodityProducerViewModel>
@{
    ViewBag.Title = "ListCommodityProducers";
    bool showInactive = false;
    showInactive = ViewBag.showInactive;
    string srchParam = ViewBag.SearchText;
}

<h2 id="breadcrumb-holder">Global Settings &nbsp;&gt; @Html.GetText("hq.commodityProducer.breadcrumb") &gt; 
    @Html.GetText("hq.commodityProducer.listing.breadcrumb")</h2>
<div id="main-content-housing">
    <h2 class="page-header">@Html.GetText("hq.commodityProducer.listing.heading")</h2>
    @if (ViewBag.msg != null)
    {
        <div class="notice-notification">
            @ViewBag.msg
        </div>
    }
    @using (Html.BeginForm("ListCommodityProducers", "CommodityProducer", new { CommoditySupplierId = ViewBag.CommoditySupplierId }))
    {

        <fieldset>
            <legend>@Html.GetText("hq.commodityProducer.listing.search")</legend>
            <div class="criteria-div">

                <span class="text-box-cshtml">@Html.TextBox("srchParam", srchParam)</span>
                <input name="srch" type="button" value="Search" class="button-style-one" id="search"/>
                <input name="srch" type="submit" value="Clear" class="button-style-one" id="clear" />
            </div>

            <div class="show-inactive">
                Show Inactive @Html.CheckBox("show_inactive", showInactive)
                <script type="text/javascript">


                    $("#show_inactive").change(function (e) {
                        window.location = window.location.href.substring(0, window.location.href.indexOf('?')) + "?showInactive=" + $(this).is(':checked') + "&CommoditySupplierId=@ViewBag.CommoditySupplierId";
                    });

                    $('#search').click(function () {
                        window.location = window.location.href.substring(0, window.location.href.indexOf('?')) + "?showInactive=" + $('#show_inactive').is(':checked') + "&srchParam=" + $('#srchParam').val();

                    });

                    $('#clear').click(function () {
                        window.location = window.location.href.substring(0, window.location.href.indexOf('?')) + "?showInactive=" + $('#show_inactive').is(':checked') + $('#srchParam').val("");

                    });

                </script>
            </div>
            <br class="clear-all" />
        </fieldset>        
    }
    @if (ViewBag.CommoditySupplierType != null && ViewBag.CommoditySupplierType==CommoditySupplierType.Cooperative)
        {
            <fieldset class="actions">
                <legend>Actions</legend>
       
                <div class="button-style-two-cshtml">@Html.ActionLink(Html.GetText("hq.commodityProducer.listing.add"), "CreateCommodityProducer",new { CommoditySupplierId = ViewBag.CommoditySupplierId },null)</div>
        
        
            </fieldset>
        }
<div class="table-container">
    <table id="tablesorter-demo" class="tablesorter">
        <thead>
            <tr>
                <th>@Html.GetText("hq.commodityProducer.Code")
                </th>
                <th>@Html.GetText("hq.commodityProducer.Acrage")
                </th>
                <th>@Html.GetText("hq.commodityProducer.Name")
                </th>
                <th>@Html.GetText("hq.commodityProducer.RegNo")
                </th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Code)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Acrage)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.RegNo)
                </td>
                <td>
                    @{
                        if (item.IsActive == (int)EntityStatus.Active)
                        {   <text> @Html.ActionLink("Edit", "EditCommodityProducer", new { id = item.Id,CommoditySupplierId = ViewBag.CommoditySupplierId })  </text>
                            <text>|</text>
                            <text>
                                @Html.ActionLink("Deactivate", "Deactivate", new { id = item.Id,CommoditySupplierId = ViewBag.CommoditySupplierId},
                                                 new { onclick = "return confirm('Are you sure you want to deactivate farm " + item.Name + "')" })
                            </text>
                            <text>|</text>
                            <text>
                                @Html.ActionLink("Delete", "DeleteCommodityProducer", new { id = item.Id ,CommoditySupplierId = ViewBag.CommoditySupplierId},
                                                 new { onclick = "return confirm('Are you sure you want to delete farm " + item.Name + "')" })
                            </text>
                        }
                        else
                        {
                            <text>
                                @Html.ActionLink("Activate", "Activate", new { id = item.Id , CommoditySupplierId = ViewBag.CommoditySupplierId  },
                                                 new { onclick = "return confirm('Are you sure you want to activate hub for " + item.Name + "')" })
                            </text>
                
                            <text>|</text>
                            <text>
                                @Html.ActionLink("Delete", "DeleteCommodityProducer", new { id = item.Id,CommoditySupplierId = ViewBag.CommoditySupplierId },
                                                 new { onclick = "return confirm('Are you sure you want to delete hub for " + item.Name + "')" })
                            </text>
                     
                        }
                    }
                </td>
            </tr>
        }

    </table>
</div>
    </div>
<div class="pager">		
        @Html.Pager(Model.PageSize, Model.PageNumber, Model.TotalItemCount, new {showInactive })
            Items per page:
            @Html.DropDownListFor(n =>Model.PageSize, ViewModelBase.ItemsPerPageList, new { @id = "ddlItemsPerPage" })
</div>
