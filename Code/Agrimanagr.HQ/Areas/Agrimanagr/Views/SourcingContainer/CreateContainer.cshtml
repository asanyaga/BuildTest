

@using Distributr.HQ.Lib.Helper
@model Distributr.HQ.Lib.ViewModels.Agrimanagr.EquipmentViewModel.SourcingContainerViewModel

@{
    ViewBag.Title = "CreateContainer";
}
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<h2 id="breadcrumb-holder">Global Settings &gt;<span class="bc-example">
@Html.ActionLink(Html.GetText("hq.container.form.breadcrumb.view"), "ListContainers")</span> &gt;
@Html.GetText("hq.container.form.breadcrumb.add")</h2>
<div id="main-content-housing">

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)
    <div id="primary-controls">
        <fieldset>
            <legend>@Html.GetText("hq.container.form.details.add")</legend>
            <table class="detail-arrange"> 
                <tr><td style="padding-top:12px;"><strong>@Html.GetText("hq.container.Name")</strong></td>
                    <td>
                        @Html.EditorFor(model => model.Name)
                        @Html.ValidationMessageFor(model => model.Name)
                    </td>
                </tr>

                <tr><td style="padding-top:12px;"><strong>@Html.GetText("hq.container.Code")</strong></td>
                    <td>
                        @Html.EditorFor(model => model.Code)
                        @Html.ValidationMessageFor(model => model.Code)
                    </td>
                </tr>
                <tr><td style="padding-top:12px;"><strong>@Html.GetText("hq.container.EquipmentNumber")</strong></td>
                    <td>
                        @Html.EditorFor(model => model.EquipmentNumber)
                        @Html.ValidationMessageFor(model => model.EquipmentNumber)
                    </td>
                </tr>
                <tr><td style="padding-top:12px;"><strong>@Html.GetText("hq.container.Make")</strong></td>
                    <td>
                        @Html.EditorFor(model => model.Make)
                        @Html.ValidationMessageFor(model => model.Make)
                    </td>
                </tr>
                <tr><td style="padding-top:12px;"><strong>@Html.GetText("hq.container.Model")</strong></td>
                    <td>
                        @Html.EditorFor(model => model.Model)
                        @Html.ValidationMessageFor(model => model.Model)
                    </td>
                </tr>
                <tr><td style="padding-top:12px;"><strong>@Html.GetText("hq.container.Description")</strong></td>
                    <td>
                        @Html.EditorFor(model => model.Description)
                        @Html.ValidationMessageFor(model => model.Description)
                    </td>
                </tr>
                @*<tr><td style="padding-top:12px;"><strong>@Html.GetText("hq.container.LoadCariage")</strong></td>
                    <td>
                        @Html.EditorFor(model => model.LoadCariage)
                        @Html.ValidationMessageFor(model => model.LoadCariage)
                    </td>
                </tr>
                <tr><td style="padding-top:12px;"><strong>@Html.GetText("hq.container.TareWeight")</strong></td>
                    <td>
                        @Html.EditorFor(model => model.TareWeight)
                        @Html.ValidationMessageFor(model => model.TareWeight)
                    </td>
                </tr>
                <tr><td style="padding-top:12px;"><strong>@Html.GetText("hq.container.Length")</strong></td>
                    <td>
                        @Html.EditorFor(model => model.Length)
                        @Html.ValidationMessageFor(model => model.Length)
                    </td>
                </tr>
                <tr><td style="padding-top:12px;"><strong>@Html.GetText("hq.container.Width")</strong></td>
                    <td>
                        @Html.EditorFor(model => model.Width)
                        @Html.ValidationMessageFor(model => model.Width)
                    </td>
                </tr>
                <tr><td style="padding-top:12px;"><strong>@Html.GetText("hq.container.Height")</strong></td>
                    <td>
                        @Html.EditorFor(model => model.Height)
                        @Html.ValidationMessageFor(model => model.Height)
                    </td>
                </tr>
                <tr><td style="padding-top:12px;"><strong>@Html.GetText("hq.container.BubbleSpace")</strong></td>
                    <td>
                        @Html.EditorFor(model => model.BubbleSpace)
                        @Html.ValidationMessageFor(model => model.BubbleSpace)
                    </td>
                </tr>
                <tr><td style="padding-top:12px;"><strong>@Html.GetText("hq.container.Volume")</strong></td>
                    <td>
                        @Html.EditorFor(model => model.Volume)
                        @Html.ValidationMessageFor(model => model.Volume)
                    </td>
                </tr>
                <tr><td style="padding-top:12px;"><strong>@Html.GetText("hq.container.FreezerTemp")</strong></td>
                    <td>
                        @Html.EditorFor(model => model.FreezerTemp)
                        @Html.ValidationMessageFor(model => model.FreezerTemp)
                    </td>
                </tr>*@
                
                <tr><td style="padding-top:12px;"><strong>@Html.GetText("hq.container.CostCentre")</strong></td>
                    <td>
                        @Html.DropDownListFor(model => model.CostCentre, new SelectList(ViewBag.CostCentreList, "Key", "Value"), "----Select Hub----")
                        @Html.ValidationMessageFor(model => model.CostCentre)
                    </td>
                </tr>


                
                @*<tr><td style="padding-top:12px;"><strong>@Html.GetText("hq.container.EquipmentType")</strong></td>
                    <td>
                        @Html.DropDownListFor(model => model.EquipmentType, new SelectList(ViewBag.EquipmentTypeList, "Key", "Value"), "----Select Equipment Type----")
                        @Html.ValidationMessageFor(model => model.EquipmentType)
                    </td>
                </tr>*@
                <tr><td style="padding-top:12px;"><strong>@Html.GetText("hq.container.ContainerType")</strong></td>
                    <td>
                        @Html.DropDownListFor(model => model.ContainerType, new  SelectList(ViewBag.ContainerTypeList, "Key", "Value"), "----Select Container Type----")
                        @Html.ValidationMessageFor(model => model.ContainerType)
                    </td>
                </tr>

                @*<tr><td style="padding-top:12px;"><strong>@Html.GetText("hq.container.CommodityId")</strong></td>
                    <td>
                        @Html.DropDownListFor(model => model.CommodityId, Model.CommodityList, "----Select Commodity----",new {@id ="commodity"})
                        @Html.ValidationMessageFor(model => model.CommodityId)
                    </td>
                </tr>
                
                <tr><td style="padding-top:12px;"><strong>@Html.GetText("hq.container.CommodityGrade")</strong></td>
                    <td>
                        @Html.DropDownListFor(model => model.CommodityGrade, new SelectList(new Dictionary<string,string>(), "Key", "Value"), "----Select grade----",new {@id ="grade"})
                        @Html.ValidationMessageFor(model => model.CommodityGrade)
                    </td>
                </tr>  *@              
                

                
            </table>
        </fieldset>
        <fieldset class="actions">
            <legend>Actions</legend>
            <input name="Create" type="submit" value="Save" class="button-style-one"/>
            <input name="Create" type="reset" value="Clear" class="button-style-one"/>
            

        </fieldset>
        </div>
       
    
}
    </div>
@*<script type="text/javascript">
    $('#commodity').change(function () {
        var selectedCommodity = $(this).val();
        if (selectedCommodity != null && selectedCommodity != '') {
            $.getJSON('@Url.Action("GetGrade")', { commodityId: selectedCommodity }, function (getgrade) {
                var citySelect = $('#grade');
                citySelect.empty();
                $.each(getgrade, function (index, grade) {
                    citySelect.append($('<option/>', {
                        value: grade.Value,
                        text: grade.Text
                    }));
                });
            });
        }
    });
</script>*@
