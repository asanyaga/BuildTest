@using Distributr.HQ.Lib.Helper
@model Distributr.HQ.Lib.ViewModels.Agrimanagr.EquipmentViewModel.ContainerTypeViewModel

@{
    ViewBag.Title = "EditContainerType";
}

<h2 id="breadcrumb-holder">GLOBAL SETTINGS &gt;  <span class="bc-example">
    @Html.ActionLink(Html.GetText("hq.containerType.listing.title"), "ListContainerTypes")</span> &gt; 
    @Html.GetText("hq.containerType.form.details.edit")</h2>

<div id="main-content-housing">
    @using (Html.BeginForm())
    {
        @Html.ValidationSummary(true)
        <div id="primary-controls">
            <fieldset>
                <legend>@Html.GetText("hq.containerType.form.details.edit")</legend>

                @Html.HiddenFor(model => model.Id)

                <table class="detail-arrange">

                    <tr>
                        <td style="padding-top: 12px;">
                            <strong>@Html.LabelFor(model => model.Name)</strong>
                        </td>
                        <td>
                            @Html.EditorFor(model => model.Name)
                            @Html.ValidationMessageFor(model => model.Name)
                        </td>
                    </tr>
                    <tr>
                        <td style="padding-top: 12px;">
                            <strong>@Html.LabelFor(model => model.Make)</strong>
                        </td>
                        <td>
                            @Html.EditorFor(model => model.Make)
                            @Html.ValidationMessageFor(model => model.Make)
                        </td>
                    </tr>
                    <tr>
                        <td style="padding-top: 12px;">
                            <strong>@Html.LabelFor(model => model.Code)</strong>
                        </td>
                        <td>
                            @Html.EditorFor(model => model.Code)
                            @Html.ValidationMessageFor(model => model.Code)
                        </td>
                    </tr>
                    <tr>
                        <td style="padding-top: 12px;">
                            <strong>@Html.LabelFor(model => model.Description)</strong>
                        </td>
                        <td>
                            @Html.EditorFor(model => model.Description)
                            @Html.ValidationMessageFor(model => model.Description)
                        </td>
                    </tr>
                    <tr>
                        <td style="padding-top: 12px;">
                            <strong>@Html.LabelFor(model => model.Model)</strong>
                        </td>
                        <td>
                            @Html.EditorFor(model => model.Model)
                            @Html.ValidationMessageFor(model => model.Model)
                        </td>
                    </tr>
                    <tr>
                        <td style="padding-top: 12px;">
                            <strong>@Html.LabelFor(model => model.LoadCariage)</strong>
                        </td>
                        <td>
                            @Html.EditorFor(model => model.LoadCariage)
                            @Html.ValidationMessageFor(model => model.LoadCariage)
                        </td>
                    </tr>
                    <tr>
                        <td style="padding-top: 12px;">
                            <strong>@Html.LabelFor(model => model.TareWeight)</strong>
                        </td>
                        <td>
                            @Html.EditorFor(model => model.TareWeight)
                            @Html.ValidationMessageFor(model => model.TareWeight)
                        </td>
                    </tr>
                    <tr>
                        <td style="padding-top: 12px;">
                            <strong>@Html.LabelFor(model => model.Length)</strong>
                        </td>
                        <td>
                            @Html.EditorFor(model => model.Length)
                            @Html.ValidationMessageFor(model => model.Length)
                        </td>
                    </tr>
                    <tr>
                        <td style="padding-top: 12px;">
                            <strong>@Html.LabelFor(model => model.Width)</strong>
                        </td>
                        <td>
                            @Html.EditorFor(model => model.Width)
                            @Html.ValidationMessageFor(model => model.Width)
                        </td>
                    </tr>
                    <tr>
                        <td style="padding-top: 12px;">
                            <strong>@Html.LabelFor(model => model.Height)</strong>
                        </td>
                        <td>
                            @Html.EditorFor(model => model.Height)
                            @Html.ValidationMessageFor(model => model.Height)
                        </td>
                    </tr>
                    <tr>
                        <td style="padding-top: 12px;">
                            <strong>@Html.LabelFor(model => model.BubbleSpace)</strong>
                        </td>
                        <td>
                            @Html.EditorFor(model => model.BubbleSpace)
                            @Html.ValidationMessageFor(model => model.BubbleSpace)
                        </td>
                    </tr>
                    <tr>
                        <td style="padding-top: 12px;">
                            <strong>@Html.LabelFor(model => model.Volume)</strong>
                        </td>
                        <td>
                            @Html.EditorFor(model => model.Volume)
                            @Html.ValidationMessageFor(model => model.Volume)
                        </td>
                    </tr>
                    <tr>
                        <td style="padding-top: 12px;">
                            <strong>@Html.LabelFor(model => model.FreezerTemp)</strong>
                        </td>
                        <td>
                            @Html.EditorFor(model => model.FreezerTemp)
                            @Html.ValidationMessageFor(model => model.FreezerTemp)
                        </td>
                    </tr>
                    <tr>
                        <td style="padding-top: 12px;">
                            <strong>@Html.LabelFor(model => model.ContainerUserType)</strong>
                        </td>
                        <td>
                            @Html.DropDownListFor(model => model.ContainerUserType, new SelectList(ViewBag.ContainerTypeList, "Key", "Value"), "----Select Container User Type ----")
                            @Html.ValidationMessageFor(model => model.ContainerUserType)
                        </td>
                    </tr>
                    <tr>
                        <td style="padding-top: 12px;">
                            <strong>@Html.LabelFor(model => model.SelectedCommodityName)</strong>
                        </td>
                        <td>
                            @Html.DropDownListFor(model => model.SelectedCommodityId, new SelectList(ViewBag.CommodityList, "Key", "Value"), new { @id = "commodity" })
                            @Html.ValidationMessageFor(model => model.SelectedCommodityId)
                        </td>
                    </tr>
                    <tr>
                        <td style="padding-top: 12px;">
                            <strong>@Html.GetText("hq.containerType.CommodityGrade")</strong>
                        </td>
                        <td>
                            @Html.DropDownListFor(model => model.SelectedCommodityGradeId, new SelectList(Model.CommodityGradesList, "Value", "Text"), "----Select grade----", new { @id = "grade" })
                            @Html.ValidationMessageFor(model => model.SelectedCommodityGradeName)
                        </td>
                    </tr>
                </table>

                <fieldset class="actions">
                    <legend>Actions</legend>
                    <input type="submit" value="Save" />
                </fieldset>
            </fieldset>
        </div>
    }

    @*<div>
    @Html.ActionLink("Back to List", "Index")
</div>*@

    <script type="text/javascript">
        $('#commodity').change(function () {
            var selectedCommodity = $(this).val();
            if (selectedCommodity != null && selectedCommodity != '') {
                $.getJSON('@Url.Action("GetGrade")', { commodityId: selectedCommodity }, function (getgrade) {
                var citySelect = $('#grade');
                citySelect.empty();
                $.each(getgrade, function (index, grade) {
                    citySelect.append($('<option/>', {
                        value: grade.Value,
                        text: grade.Text
                    }));
                });
            });
        }
    });
    </script>
</div>
