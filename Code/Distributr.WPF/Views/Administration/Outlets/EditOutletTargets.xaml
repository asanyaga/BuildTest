<Page x:Class="Distributr.WPF.UI.Views.Administration.Outlets.EditOutletTargets"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
      xmlns:utility="clr-namespace:Distributr.WPF.Lib.UI.UI_Utillity.Converters;assembly=Distributr.WPF.Lib"
      xmlns:cmd="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Extras.WPF45" mc:Ignorable="d" 
      d:DesignHeight="300" d:DesignWidth="1000"
       DataContext="{Binding EditOutletTargetsViewModel, Source={StaticResource Locator}}"
	Title="EditOutletTargets">
    <Page.Resources>
        <utility:VisibilityConverter x:Key="VisibilityConverter"/>
        <utility:IsReadOnlyConverter x:Key="IsReadOnlyConverter"/>
        <utility:IsEnabledConverter x:Key="IsEnabledConverter"/>
    </Page.Resources>
    <Grid x:Name="LayoutRoot" Width="900" >
        <StackPanel Width="Auto">
            <Grid>
                <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom"  HorizontalAlignment="Right" Margin="0,0,15,0">
                    <Label x:Name="lblShowInactive" Content="Show inactive" Width="Auto" FontWeight="Bold" Margin="0,0,5,0" />
                    <CheckBox x:Name="chkShowInactive" IsChecked="{Binding Path=ShowInactive, Mode=TwoWay}" Checked="chkShowInactive_Checked" Unchecked="chkShowInactive_Unchecked"/>
                </StackPanel>
            </Grid>
            <Grid Width="Auto">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="302*" />
                    <ColumnDefinition Width="148*" />
                    <ColumnDefinition Width="225*" />
                    <ColumnDefinition Width="225*" />
                </Grid.ColumnDefinitions>
                <StackPanel Orientation="Vertical" Margin="5,10,5,0">
                    <StackPanel Orientation="Horizontal">
                        <Label x:Name="lblRoute" Content="Route:" Margin="5,0,0,0" Height="25" FontWeight="Bold" Width="45" />
                        <!--   <ComboBox x:Name="cmbRoutes" Margin="5,0,0,0" Height="25" Width="210" ItemsSource="{Binding Path=Routes, Mode=TwoWay}"
                              DisplayMemberPath="Name"
                              SelectedItem="{Binding Path=SelectedRoute, Mode= TwoWay}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="SelectionChanged">
                                    <i:InvokeCommandAction Command="{Binding Path=RouteChangedCommand}"></i:InvokeCommandAction>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </ComboBox>-->


                        <StackPanel Grid.Row="1" Grid.Column="0" Orientation="Horizontal" Margin="5" >
                            <TextBox  Grid.Row="21" Grid.Column="1" x:Name="cmbRoutes" Margin="3,3,10,3" HorizontalContentAlignment="Left" VerticalContentAlignment="Bottom"  Width="195"
                              Text="{Binding SelectedRoute.Name, Mode=TwoWay}" IsReadOnly="True">
                            </TextBox>
                            <Button Content="..."   VerticalContentAlignment="Center " Command="{Binding  RouteDropDownOpenedCommand}"  Margin="0,0,0,0"  MinWidth="30" Height="25"  IsEnabled="{Binding CanChange, Mode=TwoWay}" />
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Click" >
                                    <cmd:EventToCommand Command="{Binding RouteDropDownOpenedCommand, Mode=TwoWay}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </StackPanel>


                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="0,20,0,0">
                        <Label x:Name="lblOutlet" Content="Outlet:" Margin="5,0,0,0" Height="25" FontWeight="Bold" Width="45" />
                        <!--  <ComboBox x:Name="cmbOutlets" Margin="5,0,0,0" Height="25" Width="210" ItemsSource="{Binding Path=RouteOutlets, Mode=TwoWay}"
                                  DisplayMemberPath="Name"
                                  SelectedItem="{Binding Path=SelectedOutlet, Mode=TwoWay}" SelectionChanged="cmbOutlets_SelectionChanged" Loaded="cmbOutlets_Loaded">
                            ~1~<i:Interaction.Triggers>
                                <i:EventTrigger EventName="SelectionChanged">
                                    <i:InvokeCommandAction Command="{Binding Path=OutletChangedCommand}"></i:InvokeCommandAction>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>@1@
                        </ComboBox>-->

                        <TextBox  Grid.Row="21" Grid.Column="1" x:Name="cmbOutlets" Margin="3,3,10,3" HorizontalContentAlignment="Left" VerticalContentAlignment="Bottom"  Width="195"
                              Text="{Binding SelectedOutlet.Name, Mode=TwoWay}" IsReadOnly="True">
                        </TextBox>
                        <Button Content="..."   VerticalContentAlignment="Center " Command="{Binding  OutletDropDownOpenedCommand}"  Margin="0,0,0,0"  MinWidth="30" Height="25"  IsEnabled="{Binding CanChange, Mode=TwoWay}" />
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click" >
                                <cmd:EventToCommand Command="{Binding OutletDropDownOpenedCommand, Mode=TwoWay}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </StackPanel>

                    <Label x:Name="lblOutletTargetSummary" Content="Outlet Target Summary:" Margin="5,10,0,0" Height="25" FontWeight="Bold"/>
                    <Border Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="4" BorderBrush="Black" BorderThickness="0.5" CornerRadius="5" Margin="5,10,5,0">
                        <Grid Width="275" HorizontalAlignment="Center" >
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <ListBox Grid.Row="1" Grid.ColumnSpan="3" x:Name="lstOutletTargetInfo" ItemsSource="{Binding Path=ProductTargetInfo, Mode=TwoWay}" Width="270" Margin="2,0,3.333,-1" RenderTransformOrigin="0.5,0.5">
                                <ListBox.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleY="-1"/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </ListBox.RenderTransform>
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition/>
                                                <ColumnDefinition/>
                                                <ColumnDefinition/>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Grid.Column="0" Width="150" Text="{Binding Path=Period}" TextAlignment="Left"/>
                                            <TextBlock Grid.Column="1" Width="100" Text="{Binding Path=Target, StringFormat=#\,0.00;(#\,0.00);0}" TextAlignment="Right"/>
                                        </Grid>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </Grid>
                    </Border>
                </StackPanel>

                <Border Grid.Column="1" Grid.ColumnSpan="4" BorderBrush="Black" BorderThickness="0.5" CornerRadius="5" Margin="5,0,5,0">
                    <StackPanel Orientation="Vertical">
                        <StackPanel Orientation="Horizontal" Margin="0,10,0,0" Height="80">
                            <Label x:Name="lblPeriod" Content="Period:" Width="80" Margin="5,5,0,0" Height="28" VerticalAlignment="Top" VerticalContentAlignment="Center"/>
                           <!-- <ComboBox x:Name="cmbPeriod" Margin="5,5,5,0" Width="200" Height="28" ItemsSource="{Binding Path=TargetPeriods, Mode=TwoWay}"
                                      DisplayMemberPath="Name"
                                      SelectedItem="{Binding Path=SelectedTargetPeriod, Mode=TwoWay}" VerticalAlignment="Top" SelectionChanged="cmbPeriod_SelectionChanged" IsEnabled="{Binding Path=AddingNew, Converter={StaticResource IsEnabledConverter}}">
                                
                                ~1~<i:EventTrigger EventName="SelectionChanged">
                                    <i:InvokeCommandAction Command="{Binding Path=TargetPeriodChangedCommand}"></i:InvokeCommandAction>
                                </i:EventTrigger>@1@
                            </ComboBox>-->
                            
                            <!--CHANGED TO--> 
                            
                            <StackPanel Grid.Row="1" Grid.Column="0" Orientation="Horizontal" Margin="5" >
                                <TextBox  Grid.Row="21" Grid.Column="1" x:Name="cmbPeriod" Margin="3,3,10,40" HorizontalContentAlignment="Left" VerticalContentAlignment="Bottom"  Width="195"
                              Text="{Binding SelectedTargetPeriod.Name, Mode=TwoWay}" IsReadOnly="True">
                            </TextBox>
                            <Button Content="..."   VerticalContentAlignment="Center " Command="{Binding  PeriodDropDownOpenedCommand}"  Margin="0,4,0,41"  MinWidth="30" Height="25"  IsEnabled="{Binding CanChange, Mode=TwoWay}" />
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Click" >
                                        <cmd:EventToCommand Command="{Binding PeriodDropDownOpenedCommand, Mode=TwoWay}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </StackPanel>

                            
                            
                            <StackPanel Margin="70,0,0,0">
                                <StackPanel Orientation="Horizontal" Margin="0,5,0,0">
                                    <Label x:Name="lblFrom" Content="From:" Width="40" Margin="0,5,10,0" HorizontalContentAlignment="Right"/>
                                    <DatePicker x:Name="dtFrom" Width="140"  Margin="5,5,0,0" IsEnabled="False" SelectedDate="{Binding Path=StartDate, Mode=TwoWay, StringFormat=\{0:d\}}"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
                                    <Label x:Name="lblTo" Content="To:" Width="40" Margin="0,5,0,0" HorizontalContentAlignment="Right"/>
                                    <DatePicker x:Name="dtTo" Width="140"  Margin="15,5,0,0" IsEnabled="False" SelectedDate="{Binding Path=EndDate, Mode=TwoWay, StringFormat=\{0:d\}}"/>
                                </StackPanel>
                            </StackPanel>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Height="35" Margin="0,0,0,10" >
                            <Label x:Name="lblSetTargetAs" Content="Set Target As:" Width="90" Margin="0,10,10,0" HorizontalContentAlignment="Right"/>
                            <RadioButton x:Name="rbQty" Content="Quantity" Width="80" Margin="10,10,0,0" VerticalAlignment="Center" IsChecked="{Binding Path=SetAsQty, Mode=TwoWay}" IsEnabled="{Binding Path=IsEditing, Converter={StaticResource IsEnabledConverter}}"/>
                            <RadioButton x:Name="rbAmount" Content="Amount" Width="80" Margin="20,10,10,0" VerticalAlignment="Center" IsChecked="{Binding Path=SetAsAmt, Mode=TwoWay}" IsEnabled="{Binding Path=IsEditing, Converter={StaticResource IsEnabledConverter}}"/>
                            <Label x:Name="lblTarget" Content="Target:" Width="90" Margin="40,10,10,0" HorizontalContentAlignment="Right" FontWeight="Bold"/>
                            <TextBox x:Name="txtTarget" Width="70" Margin="10,10,10,0" Text="{Binding Path=Target, Mode=TwoWay, ValidatesOnExceptions=True, NotifyOnValidationError=True}" KeyDown="txtTarget_KeyDown" TextChanged="txtTarget_TextChanged" IsEnabled="{Binding Path=IsEditing, Converter={StaticResource IsEnabledConverter}}"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Height="35" Margin="0,0,20,10" HorizontalAlignment="Right">
                            <Button x:Name="btnAddNew" Grid.Row="1" Grid.Column="2" Content="Add New" Margin="0,0,50,0" Height="30" Width="80" Command="{Binding Path=AddNewCommand}" IsEnabled="{Binding Path=AddingNew, Converter={StaticResource IsReadOnlyConverter}}"/>
                            <Button Content="Save"   VerticalContentAlignment="Center " Command="{Binding  SaveItem}"  Margin="0,0,50,0"  MinWidth="90" Height="30" RenderTransformOrigin="0.167,0.6"   />

                            <!-- <Button x:Name="btnSave" Grid.Row="1" Grid.Column="2" Content="Save" Margin="0,0,50,0" Height="30" Width="80" Click="btnSave_Click" Visibility="{Binding Path=IsEditing, Converter={StaticResource VisibilityConverter}}"/>-->
                            <Button Grid.Row="1" Grid.Column="2" x:Name="btnCancel" Content="Cancel" Margin="0,0,0,0" Height="30" Width="80" Command="{Binding Path=CancelCommand}" Visibility="{Binding Path=IsEditing, Converter={StaticResource VisibilityConverter}}" />
                        </StackPanel>

                    </StackPanel>
                </Border>
                <Border Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="4" BorderBrush="Black" BorderThickness="0.5" CornerRadius="5" Margin="5,10,5,0">
                    <DataGrid AutoGenerateColumns="False" Height="Auto" Name="dgTargets" Width="Auto" ItemsSource="{Binding Path=OutletTargets}" SelectionChanged="dgTargets_SelectionChanged" SelectedItem="{Binding Path=SelectedOutletTarget, Mode=TwoWay}" LoadingRow="dgTargets_LoadingRow">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="colNumber" CanUserReorder="True" CanUserResize="True" CanUserSort="True" Width="Auto" 
                    		Binding="{Binding Path=RowNumber}" Header="" IsReadOnly="True" />
                            <DataGridTextColumn x:Name="colTarget" CanUserReorder="True" CanUserResize="True" CanUserSort="True" Width="Auto" 
                                                Binding="{Binding Path=Target, StringFormat=#\,0.00;(#\,0.00);0}" Header="Target" IsReadOnly="True" />
                            <DataGridTextColumn x:Name="colTargetAs" CanUserReorder="True" CanUserResize="True" CanUserSort="True" Width="Auto" 
                                                Binding="{Binding Path=TargetSetAs}" Header="Target Set As" IsReadOnly="True" />
                            <DataGridTextColumn x:Name="colPeriod" CanUserReorder="True" CanUserResize="True" CanUserSort="True" Width="100" 
                                                Binding="{Binding Path=Period}" Header="Period" IsReadOnly="True" />
                            <DataGridTextColumn x:Name="colFrom" CanUserReorder="True" CanUserResize="True" CanUserSort="True" Width="100" 
                                                Binding="{Binding Path=From, StringFormat='{}{0:dd-MMM-yyyy}'}" Header="From" IsReadOnly="True" />
                            <DataGridTextColumn x:Name="colTo" CanUserReorder="True" CanUserResize="True" CanUserSort="True" Width="100*" 
                                                Binding="{Binding Path=To, StringFormat='{}{0:dd-MMM-yyyy}'}" Header="To" IsReadOnly="True" />

                            <DataGridTemplateColumn x:Name="colEdit" CanUserReorder="False" CanUserResize="True" CanUserSort="False" Width="140" >
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <StackPanel x:Name="spEdit" Orientation="Horizontal">

                                            <TextBlock> <Hyperlink x:Name="hlEdit"  Click="hlEdit_Click">Edit</Hyperlink></TextBlock>
                                            <Label VerticalAlignment="Top" Content="|"/>
                                            <TextBlock><Hyperlink x:Name="hlDeactivate"  Click="hlDeactivate_Click">
                                                 <TextBlock x:Name="txtDeactivate" Text="{Binding HlkDeactivateContent}"></TextBlock>
                                            </Hyperlink></TextBlock>

                                            <Label VerticalAlignment="Top" Content="|"/>
                                            <TextBlock><Hyperlink x:Name="hlDelete"  Click="hlDelete_Click">Delete</Hyperlink></TextBlock>

                                        </StackPanel>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </Border>
            </Grid>
        </StackPanel>
    </Grid>
</Page>
