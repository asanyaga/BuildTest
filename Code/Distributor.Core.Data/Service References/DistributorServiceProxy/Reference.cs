//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.544
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Distributr.Core.Data.DistributorServiceProxy {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OutletItem", Namespace="http://schemas.datacontract.org/2004/07/Distributr.WSAPI.Lib.Services.WCFServices" +
        ".DataContracts")]
    [System.SerializableAttribute()]
    public partial class OutletItem : Distributr.Core.Data.DistributorServiceProxy.CostCentreItem {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsApprovedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid OutletCategoryMasterIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid OutletDiscountGroupMasterIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid OutletProductPricingTierMasterIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid OutletTypeMasterIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid OutletVATClassMasterIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid RouteMasterIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string outLetCodeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsApproved {
            get {
                return this.IsApprovedField;
            }
            set {
                if ((this.IsApprovedField.Equals(value) != true)) {
                    this.IsApprovedField = value;
                    this.RaisePropertyChanged("IsApproved");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.LatitudeField, value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.LongitudeField, value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid OutletCategoryMasterId {
            get {
                return this.OutletCategoryMasterIdField;
            }
            set {
                if ((this.OutletCategoryMasterIdField.Equals(value) != true)) {
                    this.OutletCategoryMasterIdField = value;
                    this.RaisePropertyChanged("OutletCategoryMasterId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid OutletDiscountGroupMasterId {
            get {
                return this.OutletDiscountGroupMasterIdField;
            }
            set {
                if ((this.OutletDiscountGroupMasterIdField.Equals(value) != true)) {
                    this.OutletDiscountGroupMasterIdField = value;
                    this.RaisePropertyChanged("OutletDiscountGroupMasterId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid OutletProductPricingTierMasterId {
            get {
                return this.OutletProductPricingTierMasterIdField;
            }
            set {
                if ((this.OutletProductPricingTierMasterIdField.Equals(value) != true)) {
                    this.OutletProductPricingTierMasterIdField = value;
                    this.RaisePropertyChanged("OutletProductPricingTierMasterId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid OutletTypeMasterId {
            get {
                return this.OutletTypeMasterIdField;
            }
            set {
                if ((this.OutletTypeMasterIdField.Equals(value) != true)) {
                    this.OutletTypeMasterIdField = value;
                    this.RaisePropertyChanged("OutletTypeMasterId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid OutletVATClassMasterId {
            get {
                return this.OutletVATClassMasterIdField;
            }
            set {
                if ((this.OutletVATClassMasterIdField.Equals(value) != true)) {
                    this.OutletVATClassMasterIdField = value;
                    this.RaisePropertyChanged("OutletVATClassMasterId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid RouteMasterId {
            get {
                return this.RouteMasterIdField;
            }
            set {
                if ((this.RouteMasterIdField.Equals(value) != true)) {
                    this.RouteMasterIdField = value;
                    this.RaisePropertyChanged("RouteMasterId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string outLetCode {
            get {
                return this.outLetCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.outLetCodeField, value) != true)) {
                    this.outLetCodeField = value;
                    this.RaisePropertyChanged("outLetCode");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MasterBaseItem", Namespace="http://schemas.datacontract.org/2004/07/Distributr.WSAPI.Lib.Services.WCFServices" +
        ".DataContracts")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Distributr.Core.Data.DistributorServiceProxy.RouteItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Distributr.Core.Data.DistributorServiceProxy.UserItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Distributr.Core.Data.DistributorServiceProxy.DistributorSalesmanRouteItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Distributr.Core.Data.DistributorServiceProxy.ContactItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Distributr.Core.Data.DistributorServiceProxy.BankItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Distributr.Core.Data.DistributorServiceProxy.BankBranchItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Distributr.Core.Data.DistributorServiceProxy.CostCentreItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Distributr.Core.Data.DistributorServiceProxy.DistributorSalesmanItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Distributr.Core.Data.DistributorServiceProxy.OutletItem))]
    public partial class MasterBaseItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateCreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateLastUpdatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid MasterIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateCreated {
            get {
                return this.DateCreatedField;
            }
            set {
                if ((this.DateCreatedField.Equals(value) != true)) {
                    this.DateCreatedField = value;
                    this.RaisePropertyChanged("DateCreated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateLastUpdated {
            get {
                return this.DateLastUpdatedField;
            }
            set {
                if ((this.DateLastUpdatedField.Equals(value) != true)) {
                    this.DateLastUpdatedField = value;
                    this.RaisePropertyChanged("DateLastUpdated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid MasterId {
            get {
                return this.MasterIdField;
            }
            set {
                if ((this.MasterIdField.Equals(value) != true)) {
                    this.MasterIdField = value;
                    this.RaisePropertyChanged("MasterId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatusId {
            get {
                return this.StatusIdField;
            }
            set {
                if ((this.StatusIdField.Equals(value) != true)) {
                    this.StatusIdField = value;
                    this.RaisePropertyChanged("StatusId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RouteItem", Namespace="http://schemas.datacontract.org/2004/07/Distributr.WSAPI.Lib.Services.WCFServices" +
        ".DataContracts")]
    [System.SerializableAttribute()]
    public partial class RouteItem : Distributr.Core.Data.DistributorServiceProxy.MasterBaseItem {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid DistributorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid DistributorId {
            get {
                return this.DistributorIdField;
            }
            set {
                if ((this.DistributorIdField.Equals(value) != true)) {
                    this.DistributorIdField = value;
                    this.RaisePropertyChanged("DistributorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserItem", Namespace="http://schemas.datacontract.org/2004/07/Distributr.WSAPI.Lib.Services.WCFServices" +
        ".DataContracts")]
    [System.SerializableAttribute()]
    public partial class UserItem : Distributr.Core.Data.DistributorServiceProxy.MasterBaseItem {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid CostCenterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PINField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TillNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Distributr.Core.Domain.Master.UserEntities.UserRole[] UserRolesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CostCenterID {
            get {
                return this.CostCenterIDField;
            }
            set {
                if ((this.CostCenterIDField.Equals(value) != true)) {
                    this.CostCenterIDField = value;
                    this.RaisePropertyChanged("CostCenterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mobile {
            get {
                return this.MobileField;
            }
            set {
                if ((object.ReferenceEquals(this.MobileField, value) != true)) {
                    this.MobileField = value;
                    this.RaisePropertyChanged("Mobile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PIN {
            get {
                return this.PINField;
            }
            set {
                if ((object.ReferenceEquals(this.PINField, value) != true)) {
                    this.PINField = value;
                    this.RaisePropertyChanged("PIN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TillNumber {
            get {
                return this.TillNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.TillNumberField, value) != true)) {
                    this.TillNumberField = value;
                    this.RaisePropertyChanged("TillNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Distributr.Core.Domain.Master.UserEntities.UserRole[] UserRoles {
            get {
                return this.UserRolesField;
            }
            set {
                if ((object.ReferenceEquals(this.UserRolesField, value) != true)) {
                    this.UserRolesField = value;
                    this.RaisePropertyChanged("UserRoles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserType {
            get {
                return this.UserTypeField;
            }
            set {
                if ((this.UserTypeField.Equals(value) != true)) {
                    this.UserTypeField = value;
                    this.RaisePropertyChanged("UserType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DistributorSalesmanRouteItem", Namespace="http://schemas.datacontract.org/2004/07/Distributr.WSAPI.Lib.Services.WCFServices" +
        ".DataContracts")]
    [System.SerializableAttribute()]
    public partial class DistributorSalesmanRouteItem : Distributr.Core.Data.DistributorServiceProxy.MasterBaseItem {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid CostCentreMasterIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid RouteMasterIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CostCentreMasterId {
            get {
                return this.CostCentreMasterIdField;
            }
            set {
                if ((this.CostCentreMasterIdField.Equals(value) != true)) {
                    this.CostCentreMasterIdField = value;
                    this.RaisePropertyChanged("CostCentreMasterId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid RouteMasterId {
            get {
                return this.RouteMasterIdField;
            }
            set {
                if ((this.RouteMasterIdField.Equals(value) != true)) {
                    this.RouteMasterIdField = value;
                    this.RaisePropertyChanged("RouteMasterId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContactItem", Namespace="http://schemas.datacontract.org/2004/07/Distributr.WSAPI.Lib.Services.WCFServices" +
        ".DataContracts")]
    [System.SerializableAttribute()]
    public partial class ContactItem : Distributr.Core.Data.DistributorServiceProxy.MasterBaseItem {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BusinessPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChildrenNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ContactClassificationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ContactOwnerMasterIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Distributr.Core.Domain.Master.CostCentreEntities.ContactOwnerType ContactOwnerTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ContactTypeMasterIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateOfBirthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HomePhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HomeTownField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsNewField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid MaritalStatusMasterIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobilePhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhysicalAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostalAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpouseNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WorkExtPhoneField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BusinessPhone {
            get {
                return this.BusinessPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.BusinessPhoneField, value) != true)) {
                    this.BusinessPhoneField = value;
                    this.RaisePropertyChanged("BusinessPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChildrenNames {
            get {
                return this.ChildrenNamesField;
            }
            set {
                if ((object.ReferenceEquals(this.ChildrenNamesField, value) != true)) {
                    this.ChildrenNamesField = value;
                    this.RaisePropertyChanged("ChildrenNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ContactClassification {
            get {
                return this.ContactClassificationField;
            }
            set {
                if ((this.ContactClassificationField.Equals(value) != true)) {
                    this.ContactClassificationField = value;
                    this.RaisePropertyChanged("ContactClassification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ContactOwnerMasterId {
            get {
                return this.ContactOwnerMasterIdField;
            }
            set {
                if ((this.ContactOwnerMasterIdField.Equals(value) != true)) {
                    this.ContactOwnerMasterIdField = value;
                    this.RaisePropertyChanged("ContactOwnerMasterId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Distributr.Core.Domain.Master.CostCentreEntities.ContactOwnerType ContactOwnerType {
            get {
                return this.ContactOwnerTypeField;
            }
            set {
                if ((this.ContactOwnerTypeField.Equals(value) != true)) {
                    this.ContactOwnerTypeField = value;
                    this.RaisePropertyChanged("ContactOwnerType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ContactTypeMasterId {
            get {
                return this.ContactTypeMasterIdField;
            }
            set {
                if ((this.ContactTypeMasterIdField.Equals(value) != true)) {
                    this.ContactTypeMasterIdField = value;
                    this.RaisePropertyChanged("ContactTypeMasterId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateOfBirth {
            get {
                return this.DateOfBirthField;
            }
            set {
                if ((this.DateOfBirthField.Equals(value) != true)) {
                    this.DateOfBirthField = value;
                    this.RaisePropertyChanged("DateOfBirth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fax {
            get {
                return this.FaxField;
            }
            set {
                if ((object.ReferenceEquals(this.FaxField, value) != true)) {
                    this.FaxField = value;
                    this.RaisePropertyChanged("Fax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Firstname {
            get {
                return this.FirstnameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstnameField, value) != true)) {
                    this.FirstnameField = value;
                    this.RaisePropertyChanged("Firstname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HomePhone {
            get {
                return this.HomePhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.HomePhoneField, value) != true)) {
                    this.HomePhoneField = value;
                    this.RaisePropertyChanged("HomePhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HomeTown {
            get {
                return this.HomeTownField;
            }
            set {
                if ((object.ReferenceEquals(this.HomeTownField, value) != true)) {
                    this.HomeTownField = value;
                    this.RaisePropertyChanged("HomeTown");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsNew {
            get {
                return this.IsNewField;
            }
            set {
                if ((this.IsNewField.Equals(value) != true)) {
                    this.IsNewField = value;
                    this.RaisePropertyChanged("IsNew");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobTitle {
            get {
                return this.JobTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.JobTitleField, value) != true)) {
                    this.JobTitleField = value;
                    this.RaisePropertyChanged("JobTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Lastname {
            get {
                return this.LastnameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastnameField, value) != true)) {
                    this.LastnameField = value;
                    this.RaisePropertyChanged("Lastname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid MaritalStatusMasterId {
            get {
                return this.MaritalStatusMasterIdField;
            }
            set {
                if ((this.MaritalStatusMasterIdField.Equals(value) != true)) {
                    this.MaritalStatusMasterIdField = value;
                    this.RaisePropertyChanged("MaritalStatusMasterId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MobilePhone {
            get {
                return this.MobilePhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.MobilePhoneField, value) != true)) {
                    this.MobilePhoneField = value;
                    this.RaisePropertyChanged("MobilePhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhysicalAddress {
            get {
                return this.PhysicalAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.PhysicalAddressField, value) != true)) {
                    this.PhysicalAddressField = value;
                    this.RaisePropertyChanged("PhysicalAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostalAddress {
            get {
                return this.PostalAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.PostalAddressField, value) != true)) {
                    this.PostalAddressField = value;
                    this.RaisePropertyChanged("PostalAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SpouseName {
            get {
                return this.SpouseNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SpouseNameField, value) != true)) {
                    this.SpouseNameField = value;
                    this.RaisePropertyChanged("SpouseName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkExtPhone {
            get {
                return this.WorkExtPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkExtPhoneField, value) != true)) {
                    this.WorkExtPhoneField = value;
                    this.RaisePropertyChanged("WorkExtPhone");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BankItem", Namespace="http://schemas.datacontract.org/2004/07/Distributr.WSAPI.Lib.Services.WCFServices" +
        ".DataContracts")]
    [System.SerializableAttribute()]
    public partial class BankItem : Distributr.Core.Data.DistributorServiceProxy.MasterBaseItem {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BankBranchItem", Namespace="http://schemas.datacontract.org/2004/07/Distributr.WSAPI.Lib.Services.WCFServices" +
        ".DataContracts")]
    [System.SerializableAttribute()]
    public partial class BankBranchItem : Distributr.Core.Data.DistributorServiceProxy.MasterBaseItem {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Distributr.Core.Data.DistributorServiceProxy.BankItem BankField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Distributr.Core.Data.DistributorServiceProxy.BankItem Bank {
            get {
                return this.BankField;
            }
            set {
                if ((object.ReferenceEquals(this.BankField, value) != true)) {
                    this.BankField = value;
                    this.RaisePropertyChanged("Bank");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CostCentreItem", Namespace="http://schemas.datacontract.org/2004/07/Distributr.WSAPI.Lib.Services.WCFServices" +
        ".DataContracts")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Distributr.Core.Data.DistributorServiceProxy.DistributorSalesmanItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Distributr.Core.Data.DistributorServiceProxy.OutletItem))]
    public partial class CostCentreItem : Distributr.Core.Data.DistributorServiceProxy.MasterBaseItem {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CostCentreTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ParentCostCentreIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CostCentreTypeId {
            get {
                return this.CostCentreTypeIdField;
            }
            set {
                if ((this.CostCentreTypeIdField.Equals(value) != true)) {
                    this.CostCentreTypeIdField = value;
                    this.RaisePropertyChanged("CostCentreTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ParentCostCentreId {
            get {
                return this.ParentCostCentreIdField;
            }
            set {
                if ((this.ParentCostCentreIdField.Equals(value) != true)) {
                    this.ParentCostCentreIdField = value;
                    this.RaisePropertyChanged("ParentCostCentreId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DistributorSalesmanItem", Namespace="http://schemas.datacontract.org/2004/07/Distributr.WSAPI.Lib.Services.WCFServices" +
        ".DataContracts")]
    [System.SerializableAttribute()]
    public partial class DistributorSalesmanItem : Distributr.Core.Data.DistributorServiceProxy.CostCentreItem {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CostCentreCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid RouteMasterIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CostCentreCode {
            get {
                return this.CostCentreCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CostCentreCodeField, value) != true)) {
                    this.CostCentreCodeField = value;
                    this.RaisePropertyChanged("CostCentreCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid RouteMasterId {
            get {
                return this.RouteMasterIdField;
            }
            set {
                if ((this.RouteMasterIdField.Equals(value) != true)) {
                    this.RouteMasterIdField = value;
                    this.RaisePropertyChanged("RouteMasterId");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="", ConfigurationName="DistributorServiceProxy.DistributorServices")]
    public interface DistributorServices {
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:DistributorServices/ListDistributorOutlets", ReplyAction="urn:DistributorServices/ListDistributorOutletsResponse")]
        Distributr.Core.Data.DistributorServiceProxy.OutletItem[] ListDistributorOutlets(System.Guid distributorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:DistributorServices/AddNewOutlet", ReplyAction="urn:DistributorServices/AddNewOutletResponse")]
        string AddNewOutlet(Distributr.Core.Data.DistributorServiceProxy.OutletItem outletItem);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:DistributorServices/UpdateExistingOutlet", ReplyAction="urn:DistributorServices/UpdateExistingOutletResponse")]
        string UpdateExistingOutlet(Distributr.Core.Data.DistributorServiceProxy.OutletItem outletItem);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:DistributorServices/ApproveOutlet", ReplyAction="urn:DistributorServices/ApproveOutletResponse")]
        string ApproveOutlet(System.Guid[] outletIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:DistributorServices/MakeOutletInactive", ReplyAction="urn:DistributorServices/MakeOutletInactiveResponse")]
        string MakeOutletInactive(System.Guid outletId);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:DistributorServices/ActivateOutlet", ReplyAction="urn:DistributorServices/ActivateOutletResponse")]
        string ActivateOutlet(System.Guid outletId);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:DistributorServices/DeleteOutlet", ReplyAction="urn:DistributorServices/DeleteOutletResponse")]
        string DeleteOutlet(System.Guid outletId);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:DistributorServices/ListDistributorRoutes", ReplyAction="urn:DistributorServices/ListDistributorRoutesResponse")]
        Distributr.Core.Data.DistributorServiceProxy.RouteItem[] ListDistributorRoutes(System.Guid distributorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:DistributorServices/AddNewRoute", ReplyAction="urn:DistributorServices/AddNewRouteResponse")]
        string AddNewRoute(Distributr.Core.Data.DistributorServiceProxy.RouteItem routeItem);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:DistributorServices/UpdateExistingRoute", ReplyAction="urn:DistributorServices/UpdateExistingRouteResponse")]
        string UpdateExistingRoute(Distributr.Core.Data.DistributorServiceProxy.RouteItem routeItem);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:DistributorServices/MakeRouteInactive", ReplyAction="urn:DistributorServices/MakeRouteInactiveResponse")]
        string MakeRouteInactive(System.Guid routeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:DistributorServices/DeleteRoute", ReplyAction="urn:DistributorServices/DeleteRouteResponse")]
        string DeleteRoute(System.Guid routeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:DistributorServices/ActivateRoute", ReplyAction="urn:DistributorServices/ActivateRouteResponse")]
        string ActivateRoute(System.Guid routeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:DistributorServices/ListDistributorUsers", ReplyAction="urn:DistributorServices/ListDistributorUsersResponse")]
        Distributr.Core.Data.DistributorServiceProxy.UserItem[] ListDistributorUsers(System.Guid distributorID);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:DistributorServices/AddNewUser", ReplyAction="urn:DistributorServices/AddNewUserResponse")]
        string AddNewUser(Distributr.Core.Data.DistributorServiceProxy.UserItem userItem);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:DistributorServices/UpdateExistingUser", ReplyAction="urn:DistributorServices/UpdateExistingUserResponse")]
        string UpdateExistingUser(Distributr.Core.Data.DistributorServiceProxy.UserItem userItem);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:DistributorServices/MakeUserInactive", ReplyAction="urn:DistributorServices/MakeUserInactiveResponse")]
        string MakeUserInactive(Distributr.Core.Data.DistributorServiceProxy.UserItem userItem);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:DistributorServices/ActivateUser", ReplyAction="urn:DistributorServices/ActivateUserResponse")]
        string ActivateUser(Distributr.Core.Data.DistributorServiceProxy.UserItem userItem);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:DistributorServices/DeleteUser", ReplyAction="urn:DistributorServices/DeleteUserResponse")]
        string DeleteUser(Distributr.Core.Data.DistributorServiceProxy.UserItem userItem);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:DistributorServices/UserLoging", ReplyAction="urn:DistributorServices/UserLogingResponse")]
        bool UserLoging(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:DistributorServices/AddNewDistributorSalesman", ReplyAction="urn:DistributorServices/AddNewDistributorSalesmanResponse")]
        string AddNewDistributorSalesman(Distributr.Core.Data.DistributorServiceProxy.DistributorSalesmanItem dSItem);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:DistributorServices/AddNewDistributorUserAndDistributorSalesmanCC", ReplyAction="urn:DistributorServices/AddNewDistributorUserAndDistributorSalesmanCCResponse")]
        string AddNewDistributorUserAndDistributorSalesmanCC(Distributr.Core.Data.DistributorServiceProxy.DistributorSalesmanItem dsItem, Distributr.Core.Data.DistributorServiceProxy.UserItem userItem);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:DistributorServices/UpdateExistingDistributorSalesman", ReplyAction="urn:DistributorServices/UpdateExistingDistributorSalesmanResponse")]
        string UpdateExistingDistributorSalesman(Distributr.Core.Data.DistributorServiceProxy.DistributorSalesmanItem dSItem);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:DistributorServices/UpdateExistingDistributorSalesmanRoutes", ReplyAction="urn:DistributorServices/UpdateExistingDistributorSalesmanRoutesResponse")]
        void UpdateExistingDistributorSalesmanRoutes(Distributr.Core.Data.DistributorServiceProxy.DistributorSalesmanRouteItem[] dSItems);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:DistributorServices/MakeDistributorSalesmanInactive", ReplyAction="urn:DistributorServices/MakeDistributorSalesmanInactiveResponse")]
        string MakeDistributorSalesmanInactive(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:DistributorServices/ActivateDistributorSalesmanCc", ReplyAction="urn:DistributorServices/ActivateDistributorSalesmanCcResponse")]
        string ActivateDistributorSalesmanCc(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:DistributorServices/DeleteDistributorSalesman", ReplyAction="urn:DistributorServices/DeleteDistributorSalesmanResponse")]
        string DeleteDistributorSalesman(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:DistributorServices/MakeDistributorSalesmanRouteInactive", ReplyAction="urn:DistributorServices/MakeDistributorSalesmanRouteInactiveResponse")]
        void MakeDistributorSalesmanRouteInactive(System.Guid saleRouteId);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:DistributorServices/ActivateDistributorSalesmanRoute", ReplyAction="urn:DistributorServices/ActivateDistributorSalesmanRouteResponse")]
        void ActivateDistributorSalesmanRoute(System.Guid saleRouteId);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:DistributorServices/DeleteDistributorSalesmanRoute", ReplyAction="urn:DistributorServices/DeleteDistributorSalesmanRouteResponse")]
        void DeleteDistributorSalesmanRoute(System.Guid saleRouteId);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:DistributorServices/ListContacts", ReplyAction="urn:DistributorServices/ListContactsResponse")]
        Distributr.Core.Data.DistributorServiceProxy.ContactItem[] ListContacts(System.Guid contactOwnerMasterId);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:DistributorServices/AddNewContact", ReplyAction="urn:DistributorServices/AddNewContactResponse")]
        string AddNewContact(Distributr.Core.Data.DistributorServiceProxy.ContactItem[] contactItems);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:DistributorServices/UpdateContact", ReplyAction="urn:DistributorServices/UpdateContactResponse")]
        string UpdateContact(Distributr.Core.Data.DistributorServiceProxy.ContactItem contactItem);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:DistributorServices/DeactivateContact", ReplyAction="urn:DistributorServices/DeactivateContactResponse")]
        string DeactivateContact(System.Guid contactId);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:DistributorServices/DeleteContact", ReplyAction="urn:DistributorServices/DeleteContactResponse")]
        string DeleteContact(System.Guid contactId);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:DistributorServices/ListBanks", ReplyAction="urn:DistributorServices/ListBanksResponse")]
        Distributr.Core.Data.DistributorServiceProxy.BankItem[] ListBanks();
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:DistributorServices/AddNewBank", ReplyAction="urn:DistributorServices/AddNewBankResponse")]
        string AddNewBank(Distributr.Core.Data.DistributorServiceProxy.BankItem bankItem);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:DistributorServices/UpdateBannk", ReplyAction="urn:DistributorServices/UpdateBannkResponse")]
        string UpdateBannk(Distributr.Core.Data.DistributorServiceProxy.BankItem bankItem);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:DistributorServices/ListBankBranches", ReplyAction="urn:DistributorServices/ListBankBranchesResponse")]
        Distributr.Core.Data.DistributorServiceProxy.BankBranchItem[] ListBankBranches(System.Guid bankId);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:DistributorServices/AddNewBankBranch", ReplyAction="urn:DistributorServices/AddNewBankBranchResponse")]
        string AddNewBankBranch(Distributr.Core.Data.DistributorServiceProxy.BankBranchItem bankBranchItem);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:DistributorServices/UpdateBankBranch", ReplyAction="urn:DistributorServices/UpdateBankBranchResponse")]
        string UpdateBankBranch(Distributr.Core.Data.DistributorServiceProxy.BankBranchItem bankBranchItem);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface DistributorServicesChannel : Distributr.Core.Data.DistributorServiceProxy.DistributorServices, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DistributorServicesClient : System.ServiceModel.ClientBase<Distributr.Core.Data.DistributorServiceProxy.DistributorServices>, Distributr.Core.Data.DistributorServiceProxy.DistributorServices {
        
        public DistributorServicesClient() {
        }
        
        public DistributorServicesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DistributorServicesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DistributorServicesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DistributorServicesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Distributr.Core.Data.DistributorServiceProxy.OutletItem[] ListDistributorOutlets(System.Guid distributorId) {
            return base.Channel.ListDistributorOutlets(distributorId);
        }
        
        public string AddNewOutlet(Distributr.Core.Data.DistributorServiceProxy.OutletItem outletItem) {
            return base.Channel.AddNewOutlet(outletItem);
        }
        
        public string UpdateExistingOutlet(Distributr.Core.Data.DistributorServiceProxy.OutletItem outletItem) {
            return base.Channel.UpdateExistingOutlet(outletItem);
        }
        
        public string ApproveOutlet(System.Guid[] outletIds) {
            return base.Channel.ApproveOutlet(outletIds);
        }
        
        public string MakeOutletInactive(System.Guid outletId) {
            return base.Channel.MakeOutletInactive(outletId);
        }
        
        public string ActivateOutlet(System.Guid outletId) {
            return base.Channel.ActivateOutlet(outletId);
        }
        
        public string DeleteOutlet(System.Guid outletId) {
            return base.Channel.DeleteOutlet(outletId);
        }
        
        public Distributr.Core.Data.DistributorServiceProxy.RouteItem[] ListDistributorRoutes(System.Guid distributorId) {
            return base.Channel.ListDistributorRoutes(distributorId);
        }
        
        public string AddNewRoute(Distributr.Core.Data.DistributorServiceProxy.RouteItem routeItem) {
            return base.Channel.AddNewRoute(routeItem);
        }
        
        public string UpdateExistingRoute(Distributr.Core.Data.DistributorServiceProxy.RouteItem routeItem) {
            return base.Channel.UpdateExistingRoute(routeItem);
        }
        
        public string MakeRouteInactive(System.Guid routeId) {
            return base.Channel.MakeRouteInactive(routeId);
        }
        
        public string DeleteRoute(System.Guid routeId) {
            return base.Channel.DeleteRoute(routeId);
        }
        
        public string ActivateRoute(System.Guid routeId) {
            return base.Channel.ActivateRoute(routeId);
        }
        
        public Distributr.Core.Data.DistributorServiceProxy.UserItem[] ListDistributorUsers(System.Guid distributorID) {
            return base.Channel.ListDistributorUsers(distributorID);
        }
        
        public string AddNewUser(Distributr.Core.Data.DistributorServiceProxy.UserItem userItem) {
            return base.Channel.AddNewUser(userItem);
        }
        
        public string UpdateExistingUser(Distributr.Core.Data.DistributorServiceProxy.UserItem userItem) {
            return base.Channel.UpdateExistingUser(userItem);
        }
        
        public string MakeUserInactive(Distributr.Core.Data.DistributorServiceProxy.UserItem userItem) {
            return base.Channel.MakeUserInactive(userItem);
        }
        
        public string ActivateUser(Distributr.Core.Data.DistributorServiceProxy.UserItem userItem) {
            return base.Channel.ActivateUser(userItem);
        }
        
        public string DeleteUser(Distributr.Core.Data.DistributorServiceProxy.UserItem userItem) {
            return base.Channel.DeleteUser(userItem);
        }
        
        public bool UserLoging(string username, string password) {
            return base.Channel.UserLoging(username, password);
        }
        
        public string AddNewDistributorSalesman(Distributr.Core.Data.DistributorServiceProxy.DistributorSalesmanItem dSItem) {
            return base.Channel.AddNewDistributorSalesman(dSItem);
        }
        
        public string AddNewDistributorUserAndDistributorSalesmanCC(Distributr.Core.Data.DistributorServiceProxy.DistributorSalesmanItem dsItem, Distributr.Core.Data.DistributorServiceProxy.UserItem userItem) {
            return base.Channel.AddNewDistributorUserAndDistributorSalesmanCC(dsItem, userItem);
        }
        
        public string UpdateExistingDistributorSalesman(Distributr.Core.Data.DistributorServiceProxy.DistributorSalesmanItem dSItem) {
            return base.Channel.UpdateExistingDistributorSalesman(dSItem);
        }
        
        public void UpdateExistingDistributorSalesmanRoutes(Distributr.Core.Data.DistributorServiceProxy.DistributorSalesmanRouteItem[] dSItems) {
            base.Channel.UpdateExistingDistributorSalesmanRoutes(dSItems);
        }
        
        public string MakeDistributorSalesmanInactive(System.Guid id) {
            return base.Channel.MakeDistributorSalesmanInactive(id);
        }
        
        public string ActivateDistributorSalesmanCc(System.Guid id) {
            return base.Channel.ActivateDistributorSalesmanCc(id);
        }
        
        public string DeleteDistributorSalesman(System.Guid id) {
            return base.Channel.DeleteDistributorSalesman(id);
        }
        
        public void MakeDistributorSalesmanRouteInactive(System.Guid saleRouteId) {
            base.Channel.MakeDistributorSalesmanRouteInactive(saleRouteId);
        }
        
        public void ActivateDistributorSalesmanRoute(System.Guid saleRouteId) {
            base.Channel.ActivateDistributorSalesmanRoute(saleRouteId);
        }
        
        public void DeleteDistributorSalesmanRoute(System.Guid saleRouteId) {
            base.Channel.DeleteDistributorSalesmanRoute(saleRouteId);
        }
        
        public Distributr.Core.Data.DistributorServiceProxy.ContactItem[] ListContacts(System.Guid contactOwnerMasterId) {
            return base.Channel.ListContacts(contactOwnerMasterId);
        }
        
        public string AddNewContact(Distributr.Core.Data.DistributorServiceProxy.ContactItem[] contactItems) {
            return base.Channel.AddNewContact(contactItems);
        }
        
        public string UpdateContact(Distributr.Core.Data.DistributorServiceProxy.ContactItem contactItem) {
            return base.Channel.UpdateContact(contactItem);
        }
        
        public string DeactivateContact(System.Guid contactId) {
            return base.Channel.DeactivateContact(contactId);
        }
        
        public string DeleteContact(System.Guid contactId) {
            return base.Channel.DeleteContact(contactId);
        }
        
        public Distributr.Core.Data.DistributorServiceProxy.BankItem[] ListBanks() {
            return base.Channel.ListBanks();
        }
        
        public string AddNewBank(Distributr.Core.Data.DistributorServiceProxy.BankItem bankItem) {
            return base.Channel.AddNewBank(bankItem);
        }
        
        public string UpdateBannk(Distributr.Core.Data.DistributorServiceProxy.BankItem bankItem) {
            return base.Channel.UpdateBannk(bankItem);
        }
        
        public Distributr.Core.Data.DistributorServiceProxy.BankBranchItem[] ListBankBranches(System.Guid bankId) {
            return base.Channel.ListBankBranches(bankId);
        }
        
        public string AddNewBankBranch(Distributr.Core.Data.DistributorServiceProxy.BankBranchItem bankBranchItem) {
            return base.Channel.AddNewBankBranch(bankBranchItem);
        }
        
        public string UpdateBankBranch(Distributr.Core.Data.DistributorServiceProxy.BankBranchItem bankBranchItem) {
            return base.Channel.UpdateBankBranch(bankBranchItem);
        }
    }
}
